createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 3,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[16:20],0, 1e-5,log = TRUE))
d6 = sum(dnorm(par[21:25],0,sd = systx,log = TRUE))
d7 = dgamma(par[26], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[27:(N + 26)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 27):(2*N + 26)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 500000,
burnin = 80000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[16:20]
xnorm = par[21:25]
ue = par[26]
y = par[27:(N + 26)]
xx = par[(N + 27):(2*N + 26)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-5, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx,sd = errx,log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx + xnorm[re], e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
low <- c(rep(1e-3,2),1e-4,1e-4, 2,2,  rep(1e-4,5),    rep(0.5,5), rep(0,5), -5*systx, 1e-3, obsy - 2*abs(erry),obsx - errx)
up <- c(1,0.3, rep(10,2), 10,10,   rep(1,5),  rep(1.5,5),   rep(5e-2,5), 5*systx, 100, obsy + 2*abs(erry),obsx + errx)
createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 3,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[16:20],0, 1e-5,log = TRUE))
d6 = sum(dnorm(par[21:25],0,sd = systx,log = TRUE))
d7 = dgamma(par[26], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[27:(N + 26)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 27):(2*N + 26)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 500000,
burnin = 80000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[16:20]
xnorm = par[21:25]
ue = par[26]
y = par[27:(N + 26)]
xx = par[(N + 27):(2*N + 26)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-5, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx + xnorm[re],sd = errx + xscat,log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx, e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
likelihood(low)
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[16:20]
xnorm = par[21:25]
ue = par[26]
y = par[27:(N + 26)]
xx = par[(N + 27):(2*N + 26)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-5, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx + xnorm[re],sd = errx + xscat[re],log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx, e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
likelihood(low)
likelihood(up)
sampler
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
sampler()
likelihood(ampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
likelihood(sampler())
runif(N,obsx - errx,obsx + errx))
runif(N,obsx - errx,obsx + errx)
rgamma(1, 1, 0.05)
rnorm(5, 0, systx)
sum(dnorm(0,mean=0,sd=systx,log = T))
sum(dlnorm(1,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
sum(dnorm(0,mean=0,sd=systx,log = T))
sum(dnorm(0,mean = 0,sd = 1e-5, log = T))
sum(dnorm(10,mean = 0,sd = 1e-5, log = T))
sum(dnorm(1,mean = 0,sd = 1e-5, log = T))
sum(dnorm(0.1,mean = 0,sd = 1e-5, log = T))
sum(dnorm(0.01,mean = 0,sd = 1e-5, log = T))
sum(dtnorm(par[16:20],0, 1e-5,log = TRUE))
sum(dtnorm(low[16:20],0, 1e-5,log = TRUE))
sum(dnorm(low[16:20],0, 1e-5,log = TRUE))
sum(dtnorm(0,0, 1e-5,log = TRUE))
low[16:20]
7:11
rep(0.5,5)
16:20
22:26
17:21
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[17:21]
xnorm = par[22:26]
ue = par[27]
y = par[28:(N + 27)]
xx = par[(N + 28):(2*N + 27)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-5, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx + xnorm[re],sd = errx + xscat[re],log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx, e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
low <- c(rep(1e-3,2),1e-4,1e-4, 2,2,  rep(1e-4,5),    rep(0.5,5), rep(0,5), -5*systx, 1e-3, obsy - 2*abs(erry),obsx - errx)
up <- c(1,0.3, rep(10,2), 10,10,   rep(1,5),  rep(1.5,5),   rep(5e-2,5), 5*systx, 100, obsy + 2*abs(erry),obsx + errx)
likelihood(low)
likelihood(up)
low <- c(rep(1e-3,2),1e-4,1e-4, 2,2,  rep(1e-4,5),    rep(0.5,5), rep(0,5), -5*systx, 1e-3, obsy - 2*abs(erry),obsx - errx)
up <- c(1,0.3, rep(10,2), 10,10,   rep(1,5),  rep(1.5,5),   rep(5e-2,5), 5*systx, 100, obsy + 2*abs(erry),obsx + errx)
createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 3,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[16:20],0, 1e-5,log = TRUE))
d6 = sum(dnorm(par[21:25],0,sd = systx,log = TRUE))
d7 = dgamma(par[26], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[27:(N + 26)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 27):(2*N + 26)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 500000,
burnin = 80000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 3,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[17:21],0, 1e-5,log = TRUE))
d6 = sum(dnorm(par[22:26],0,sd = systx,log = TRUE))
d7 = dgamma(par[27], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[28:(N + 27)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 28):(2*N + 27)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 500000,
burnin = 80000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
summary(res)
tracePlot(sampler = res,  start = 2000, whichParameters = c(1,2,3,4,5,6))
tracePlot(sampler = res,  start = 20000, whichParameters = c(1,2,3,4,5,6))
tracePlot(sampler = res,  start = 50000, whichParameters = c(1,2,3,4,5,6))
tracePlot(sampler = res,  start = 80000, whichParameters = c(1,2,3,4,5,6))
tracePlot(sampler = res,  start = 80000, whichParameters = c(1,2,3,4,5,6,27))
# preparation: remove all variables from the work space
rm(list=ls())
set.seed(123)
######################################################################
# data input
# format: obsx, obsy, errobsy; the latter are the individual statistical
# errors of each datum [i]
#
# energy is in units of MeV, and the S-factor in MeVb;
######################################################################
# import packages
require(RcppGSL);require(ggplot2);require(ggthemes)
require(nuclear);library(magrittr);require(gsl)
library(dplyr);require(lessR);library(BayesianTools);
require(truncnorm);require(msm)
source("SfacTdn.R")
######################################################################
## Read DATA
ensamble <- read.csv("ensamble_Tdn_extra.csv",header = T)
#%>%  filter(E <= 0.5)
#filter(dat!= "Mag75")
#%>% filter(E <= 0.5) %>%   filter(dat!= "Arn53") %>%
# droplevels(ensamble$dat)
re <- as.numeric(ensamble$dat)
Nre <- length(unique(ensamble$dat))
Nik <- length(unique(ensamble$invK))
# Radius
# r_i = 6
# r_f = 5
N <- nrow(ensamble)
obsy <- ensamble$S    # Response variable
obsx <-  ensamble$E   # Predictors
erry <- ensamble$Stat
errx <- ensamble$E_stat
set <- ensamble$dat
lab <- ensamble$invK
syst = c(unique(ensamble$Syst))
systx <- c(0.000075,0.000009,0.0002,0.000006,0.0032)
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[17:21]
xnorm = par[22:26]
ue = par[27]
y = par[28:(N + 27)]
xx = par[(N + 28):(2*N + 27)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-5, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx + xnorm[re],sd = errx + xscat[re],log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx, e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
low <- c(rep(1e-3,2),1e-4,1e-4, 2,2,  rep(1e-4,5),    rep(0.5,5), rep(0,5), -5*systx, 1e-3, obsy - 2*abs(erry),obsx - errx)
up <- c(1,0.3, rep(10,2), 10,10,   rep(1,5),  rep(1.5,5),   rep(5e-2,5), 5*systx, 100, obsy + 2*abs(erry),obsx + errx)
createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 1,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[17:21],0, 1e-5,log = TRUE))
d6 = sum(dnorm(par[22:26],0,sd = systx,log = TRUE))
d7 = dgamma(par[27], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[28:(N + 27)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 28):(2*N + 27)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-5),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 5000000,
burnin = 500000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 5000000,
burnin = 500000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
likelihood(up)
likelihood(low)
likelihood <- function(par){
e0 = par[1]
er = par[2]
gin = par[3]
gout = par[4]
ad   = par[5]
ap =  par[6]
yscat = par[7:11]
ynorm = par[12:16]
xscat = par[17:21]
xnorm = par[22:26]
ue = par[27]
y = par[28:(N + 27)]
xx = par[(N + 28):(2*N + 27)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log = T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxscat <- sum(dnorm(xscat,mean = 0,sd = 1e-3, log = T))
# +xscat[re]
# llxx    <- sum(dnorm(obsx,mean = xx,sd = (errx),log = T))
llxx  <- sum(dnorm(obsx,mean = xx + xnorm[re],sd = errx + xscat[re],log = T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xx, e0 ,er,gin, gout,ad,ap,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
#  + llxscat
return(llynorm + llobs + lly + llxx  + llxnorm + llxscat )
}
low <- c(rep(1e-3,2),1e-4,1e-4, 2,2,  rep(1e-4,5),    rep(0.5,5), rep(0,5), -5*systx, 1e-3, obsy - 2*abs(erry),obsx - errx)
up <- c(1,0.3, rep(10,2), 10,10,   rep(1,5),  rep(1.5,5),   rep(5e-2,5), 5*systx, 100, obsy + 2*abs(erry),obsx + errx)
createTdnPrior <- function(lower, upper, best = NULL){
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2], mean = 0, sd = 1,log = TRUE))
d3 = sum(dnorm(par[3:4], mean = 0, sd = 3, log = TRUE))
d4 = sum(dunif(par[5:6], 2, 10, log = TRUE))
d3 = sum(dunif(par[7:11], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[12:16],log(1),log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[17:21],0, 1e-3,log = TRUE))
d6 = sum(dnorm(par[22:26],0,sd = systx,log = TRUE))
d7 = dgamma(par[27], 1, 0.05,log = TRUE)
d8 = sum(dunif(par[28:(N + 27)],obsy - 2*erry,obsy + 2*erry,log = TRUE))
d9 = sum(dunif(par[(N + 28):(2*N + 27)],obsx - errx,obsx + errx,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 + d8 + d9)
}
sampler = function(){
c(runif(1, 0,  1),
exp(runif(1, log(0.001), log(0.3))),
exp(runif(2, log(1e-3), log(10))),
runif(2, 2, 10),
exp(runif(5,log(1e-4), log(1))), #xcat
rlnorm(5, log(1), log(1 + syst^2)), #ynorm
runif(5, 0, 5e-3),
rnorm(5, 0, systx),
rgamma(1, 1, 0.05),
runif(N, obsy - erry,obsy + erry),
runif(N,obsx - errx,obsx + errx))
}
out <- createPrior(density = density, sampler = sampler, lower = lower, upper = upper, best = best)
return(out)
}
#prior <- createPrior(density = density,
#                    lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood, lower = low, upper = up,
names = c("e0","er","gd2","gn2","ad","an",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N)))
settings <- list(iterations = 5000000,
burnin = 500000, message = T,nrChains = 1,adaptation = 0.3)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res,  start = 80000, whichParameters = c(1,2,3,4,5,6,27))
tracePlot(sampler = res,  start = 10000, whichParameters = c(1,2,3,4,5,6,27))
