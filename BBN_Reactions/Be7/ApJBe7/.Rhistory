geom_errorbar(show.legend = FALSE,aes(x=E,ymin=S-Stat,ymax=S+Stat,group=dat,color=type),alpha=0.75,width=0.025)+
geom_point(data=Be7npG,aes(x=obsx,y=obsy,group=dat,shape=dat,color=type,fill=type,size=type,alpha=type)
)+
scale_shape_manual(guide = guide_legend(nrow = 2,
override.aes = list(size = 2.5)),
values=c(22,24,21,4,25,8,23),name="")+
scale_size_manual(values=c(2.7,2.5),name="",guide="none")+
scale_color_manual(name="",values=c("black","gray45"),guide="none")+
scale_alpha_manual(name="",values=c(1,0.75),guide="none")+
scale_fill_manual(values=c("black","white"),name="",guide="none") +
scale_x_log10(breaks = c(1e-6,1e-3,1),
labels=c(expression(10^-6),expression(10^-3),"1")) +
theme_economist_white() + ylab(expression(paste(sqrt(E), sigma, " (", sqrt(MeV), "b)"))) +
xlab("Energy (MeV)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85")) +
coord_cartesian(xlim=c(1e-8,2.25),ylim=c(0.175,9.75)) +
annotate(geom="text",1e-7, 1,
label=expression(paste(NULL^"7","Be(n,p)",NULL^"7","Li")),
size=6)
dev.off()
Be7npG2 <- Be7npG %>% unite(comb, c(dat,type),remove=F) %>%
mutate(comb =as.factor(comb))
# Plot all
pdf("data.pdf", width=7.5, height=5)
ggplot(Be7npG,aes(x=E,y=S)) +
geom_area(data=MBD,aes(x=x,y=y),color="#a6cee3",fill="#a6cee3",
size=0,alpha=0.4) +
geom_errorbar(data=Be7npG2,show.legend = FALSE,aes(x=E,y=S,ymin=S-Stat,ymax=S+Stat,group=dat,color=comb),width=0.025)+
geom_point(data=Be7npG2,aes(x=obsx,y=obsy,group=dat,shape=dat,color=comb,fill=type,size=type))+
scale_shape_manual(values=c(22,24,21,4,25,8,23),name="",
guide = guide_legend(ncol = 1,
override.aes = list(size = 2.5))) +
scale_size_manual(values=c(2.75,2.5),name="",guide="none")+
#  scale_color_discrete_qualitative(name="",guide="none") +
scale_color_manual(name="",guide="none",
values=c("#e41a1c","black","#d95f02","black","#377eb8","black",
"#e41a1c","#4daf4a","#984ea3","black")) +
scale_alpha_manual(name="",values=c(1,0.5),guide="none")+
scale_fill_manual(values=c("#e41a1c","white"),name="",guide="none") +
scale_x_log10(breaks = c(1e-6,1e-3,1),
labels=c(expression(10^-6),expression(10^-3),"1")) +
theme_economist_white() + ylab(expression(paste(sqrt(E), sigma, " (", sqrt(MeV), "b)"))) +
xlab("Energy (MeV)") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.875,0.75),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85")) +
coord_cartesian(xlim=c(1e-8,2.25),ylim=c(0.175,9.75)) +
annotate(geom="text",1e-7, 1,
label=expression(paste(NULL^"7","Be(n,p)",NULL^"7","Li")),
size=6)
dev.off()
setwd("~/Documents/GitHub/Bayesian_Nuclear/BBN_Reactions/Be7/ApJBe7")
require(ggmcmc)
require(coda)
require(ggridges)
require(nuclear)
require(dplyr)
require(ggplot2)
require(ggthemes)
require(forcats)
require(tidybayes)
require(truncnorm)
require(nuclear)
require(gsl)
require(cowplot)
source("pair_wise_plot.R")
source("plot_normfactor_II.R")
source("sigma7Benp7mod.R")
source('plot_Er.R')
source('plot_gb.R')
source('plot_ga.R')
Be7np <- read.csv("Be7np.csv")
Be7np$dat <- as.factor(Be7np$dat)
Be7np$dat <- fct_relevel(Be7np$dat, "Dam18","Gib59","Mar19","Koe88","Koe88b","Dam18b","Gib59b",
"Her19","Cer89","Tom19")
Be7np$type <- as.factor(Be7np$type)
re <- as.numeric(Be7np$dat)
Nre <- length(unique(Be7np$dat))
# Unique removes duplicated vector, we want to know how many groups of
# data are there
N <- nrow(Be7np) # Total No of data sets
obsy <- Be7np$S    # Response variable in MeV
obsx <-  Be7np$E   # Predictors
erry <- Be7np$Stat # Error in MeV
set <- Be7np$dat # Get the labels as a vector
fu <- log(c(1.020,1.10,1.050,1.051,1.085,1.032))
# Plotting routines
samp <- read.csv("MCMC_ApJ_ultimaterun.csv",header = T)
en <- samp[,c('e0_1','e0_2',
'e0_3', 'e0_4',
'e0_5', 'e0_6',
'e0_7')]
theta1 <- plot_Er(samp)
theta2 <- plot_ga(samp)
theta3 <- plot_gb(samp)
plot_grid(
theta1,theta2,theta3 ,
align = "h", axis = "tb",
nrow = 3)
pdf("Be7_Er.pdf", width=18.25, height=3*3.5)
plot_grid(
theta1,theta2,theta3 ,
align = "h", axis = "tb",
nrow = 3)
dev.off()
pdf("Be7_Rmatrix.pdf", width=18.25, height=3*3.5)
plot_grid(
theta1,theta2,theta3 ,
align = "h", axis = "tb",
nrow = 3)
dev.off()
pdf("Be7_Rmatrix.pdf", width=18, height=3*3)
plot_grid(
theta1,theta2,theta3 ,
align = "h", axis = "tb",
nrow = 3)
dev.off()
rgamma(1e4,1,20)
hist(rgamma(1e4,1,20))
setwd("~/Documents/GitHub/Bayesian_Nuclear/BBN_Reactions/Be7/ApJBe7")
require(xtable)
require(gsl)
require(RcppGSL)
## Auxiliar Function
fu <- function(x){exp(sqrt(log(1+var(x)/mean(x)^2)))}
##
## Load your mcmcChain here
mat <- read.csv("MCMC_ApJ_ultimaterun.csv",header = T)
#mat$hbg <- 0
## Functions to be used to calculate rate at a given temperature
sigma7Benp  <-  function(ecm, e0, ga, gb, ra, rb, jr, la, lb){
# input masses, charges, angular momenta
m1_i = 7.0147344
m2_i = 1.0086649158   # masses (amu) of 7Be and n
m1_f = 7.014357697
m2_f = 1.007276452    # masses (amu) of 7Li and p
z1_i = 4
z2_i = 0              # charges of 7Be and n
z1_f = 3
z2_f = 1              # charges of 7Li and p
jt = 1.5              # spins of target, projectile
jp = 0.5
Q = 1.6442402         # reaction Q-value (MeV)
# reduced masses
mue_i <- (m1_i*m2_i)/(m1_i+m2_i)
mue_f <- (m1_f*m2_f)/(m1_f+m2_f)
# constants
pek <- 6.56618216e-1/mue_i
omega <- (2*jr+1)/((2*jt+1)*(2*jp+1))
### CALCULATE S-FACTOR
## incoming channel
eta_a=0.1574854*z2_i*z1_i*sqrt(mue_i)
rho_a=0.218735*ra*sqrt(mue_i)
eta_i=eta_a/(sqrt(ecm))
rho_i=rho_a*(sqrt(ecm))
P3 <- coulomb_wave_FG(eta_i, rho_i, la, k=0)
# penetration and shift factor
p_i <- rho_i/(P3$val_F^2 + P3$val_G^2)
s_i <- rho_i*(P3$val_F*P3$val_Fp + P3$val_G*P3$val_Gp)/(P3$val_F^2 + P3$val_G^2)
# shift factor at energy E0 [eigenvalue]
xeta_i=eta_a/(sqrt(e0))
xrho_i=rho_a*(sqrt(e0))
PX1 <- coulomb_wave_FG(xeta_i, xrho_i, la, k=0)
b_i <- xrho_i*(PX1$val_F*PX1$val_Fp + PX1$val_G*PX1$val_Gp)/(PX1$val_F^2 + PX1$val_G^2)
# partial width
Ga <- 2*ga*p_i
## outgoing channel
eta_b=0.1574854*z2_f*z1_f*sqrt(mue_f)
rho_b=0.218735*rb*sqrt(mue_f)
eta_f=eta_b/(sqrt(ecm+Q))
rho_f=rho_b*(sqrt(ecm+Q))
P4 <- coulomb_wave_FG(eta_f, rho_f, lb, k=0)
# penetration and shift factor
p_f <- rho_f/(P4$val_F^2 + P4$val_G^2)
s_f <- rho_f*(P4$val_F*P4$val_Fp + P4$val_G*P4$val_Gp)/(P4$val_F^2 + P4$val_G^2)
# shift factor at energy E0+Q
xeta_f=eta_b/(sqrt(e0+Q))
xrho_f=rho_b*(sqrt(e0+Q))
PX2 <- coulomb_wave_FG(xeta_f, xrho_f, lb, k=0)
b_f <- xrho_f*(PX2$val_F*PX2$val_Fp + PX2$val_G*PX2$val_Gp)/(PX2$val_F^2 + PX2$val_G^2)
# partial width
Gb <- 2*gb*p_f
tapp <- (s_i-b_i)*ga + (s_f-b_f)*gb
s1=pek*omega*Ga*Gb
s2=((e0-ecm-tapp)^2)+0.25*((Ga+Gb)^2)
SG <- (s1/s2)*(1/ecm)
return(SG = SG)
}
sigma7Benp7mod <- function(ecm,M){
SF1 <-  sigma7Benp(ecm, e0 = M[["e0_1"]], ga = M[["ga_1"]], gb = M[["gb_1"]], ra = M[["ra"]], rb = M[["rb"]], jr = 2, la = 0, lb = 0)
SF2 <-  sigma7Benp(ecm, e0 = M[["e0_2"]], ga = M[["ga_2"]], gb = M[["gb_2"]], ra = M[["ra"]], rb = M[["rb"]], jr = 3, la = 1, lb = 1)
SF3 <-  sigma7Benp(ecm, e0 = M[["e0_3"]], ga = M[["ga_3"]], gb = M[["gb_3"]], ra = M[["ra"]], rb = M[["rb"]], jr = 3, la = 1, lb = 1)
SF4 <-  sigma7Benp(ecm, e0 = M[["e0_4"]], ga = M[["ga_4"]], gb = M[["gb_4"]], ra = M[["ra"]], rb = M[["rb"]], jr = 1, la = 0, lb = 0)
SF5 <-  sigma7Benp(ecm, e0 = M[["e0_5"]], ga = M[["ga_5"]], gb = M[["gb_5"]], ra = M[["ra"]], rb = M[["rb"]], jr = 4, la = 3, lb = 3)
SF6 <-  sigma7Benp(ecm, e0 = M[["e0_6"]], ga = M[["ga_6"]], gb = M[["gb_6"]], ra = M[["ra"]], rb = M[["rb"]], jr = 2, la = 1, lb = 1)
SF7 <-  sigma7Benp(ecm, e0 = M[["e0_7"]], ga = M[["ga_7"]], gb = M[["gb_7"]], ra = M[["ra"]], rb = M[["rb"]], jr = 0, la = 1, lb = 1)
SF <- SF1 + SF2 + SF3 + SF4 + SF5 + SF6 + SF7
return(SF = SF)
}
NumRate7Benp   <- function(x, T9){
#     ----------------------------------------------------
#     Integrand
#     ----------------------------------------------------
integrand <- function(E,T9) {
E * (sigma7Benp7mod(E,x) + x["hbg"]/sqrt(E)) * exp(-11.605*E/T9)
#    (sqrt(E) * sigma7Benp7mod(E,x) + x["hbg"])*
#      exp(-E/(0.086173324*T9))
}
# CALCULATE Nuclear rate
m1 = 7.0147344
m2 = 1.0086649158   # masses (amu) of 7Be and n
mue = (m1*m2)/(m1+m2)
Nasv <- function(Temp){(3.7318e10/Temp^{3/2})*sqrt(1/mue)*integrate(integrand, lower = 1e-10, upper = 2,
abs.tol = 0L,
T9 = Temp)$value}
# Note to self, the limits of integration, in some sense, the scale should be appropriate.
# From HELP, the first argument MUST BE integrated. The optional argument T9 is used to be substituted in
# Nasv <-> N A <sigma v >
out <- Nasv(T9)
return(Nasv=out)
}
NumRate7BenpTable <- function(mat, N = 1000,T9){
index <- sample(1:nrow(mat),size=N,replace=FALSE)
Mat  <- mat[index,]
Mat2 <-  as.data.frame(sapply(T9,function(Tgrid){apply(Mat,1,NumRate7Benp,T9=Tgrid)}))
gg2 <- apply(Mat2, 2, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
fu_I <- apply(Mat2, 2, fu)
gg2data <- data.frame(T9 =T9, lower = gg2["16%",], median = gg2["50%",], upper = gg2["84%",],
fu = fu_I)
#  gg2data$fu <- fu_I
rownames(gg2data) <- c()
return(gg2data)
}
# Chain reduction to 2000 iterations (randomly sampled) if needed
Tgrid = c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.5,1.75,2,
2.5,3,3.5,4,5,6,7,8,9,10)
NRate <- NumRate7BenpTable(mat,N = 1e3,T9=Tgrid)
df1 = data.frame(NRate[1:30,c(1,3,2,4,5)])
df2 = data.frame(NRate[31:60,c(1,3,2,4,5)])
dfFull = data.frame(df1,df2)
require(sparr)
install.packages("sparr")
write.csv(NRate,"MCMCrates_Be7.csv",row.names = F)
print(xtable(dfFull[,c(1,2,5,6,7,10)],
type = "latex",display=c("e","g","E","g","g","E","g"),
digits=4),include.rownames = FALSE)
require(sparr)
data(chorley) # Chorley-Ribble data (package 'spatstat')
ch.multi <- multiscale.density(chorley,h0=1)
plot(ch.multi)
require(purrr)
require(forcats)
require(dplyr)
require(tidyverse)
require(ggplot2)
require(ggthemes)
require(colorspace)
NABe7 <- read.csv("MCMCrates_Be7.csv",header = TRUE)
Norm <- NABe7$median
NAI_new <- NABe7[,c("T9","median","lower","upper")]  %>%
set_names(c("T9","Adopted","Lower","Upper")) %>%
mutate(Adopted = Adopted/Norm) %>%
mutate(Lower = Lower/Norm) %>%
mutate(Upper = Upper/Norm)  %>%
mutate(data="presentI")
old <- read.csv("Be7Li.csv",header = TRUE)
old <- old[,c("T.9","Adopted","Lower","Upper")]  %>%
set_names(c("T9","Adopted","Lower","Upper"))  %>%
#  filter(T9 <=1) %>%
mutate(data="previous") %>%
mutate(Adopted = Adopted/Norm) %>%
mutate(Lower = Lower/Norm) %>%
mutate(Upper = Upper/Norm)
joint <- rbind(old,NAI_new)
joint$data <- as.factor(joint$data)
joint$data <- factor(joint$data, levels = c("previous","presentI"))
pdf("Be7_NAratio.pdf", width=7.5, height=5)
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.05),xlim=c(0.00125,10)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1,10),labels=c("0.001","0.01","0.1","1","10"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"),
axis.text.y = element_text(size = 16, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 16, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")))
dev.off()
samp <- read.csv("MCMC_ApJ_ultimaterun.csv",header = T)
en <- samp[,c('e0_1','e0_2',
'e0_3', 'e0_4',
'e0_5', 'e0_6',
'e0_7')]
gan <- samp[,c('ga_1','ga_2', 'ga_3', 'ga_4', 'ga_5', 'ga_6', 'ga_7')]
gbn <- samp[,c('gb_1','gb_2', 'gb_3', 'gb_4', 'gb_5', 'gb_6', 'gb_7')]
norm <- samp[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]
sigscat <- samp[,c("y.scat.1.","y.scat.2.",
"y.scat.3.","y.scat.4.",
"y.scat.5." ,"y.scat.6.",
"y.scat.7.",
"y.scat.8.",
"y.scat.9.","y.scat.10.")]
probBe7 <- function(x){
quantile(x,probs=c(0.16, 0.5, 0.84))
}
tabEr <- apply(en,2,probBe7)
tabga <- apply(gan,2,probBe7)
tabgb <- apply(gbn,2,probBe7)
round(formtab(tabEr),5)
round(formtab( tabga ),5)
round(formtab( tabgb ),5)
round(formtab(apply(norm,2,probBe7)),2)
round(formtab(apply(sigscat,2,probBe7)),2)
formtab <- function(tab){
low <-  tab[2,] - tab[1,]
up <- tab[3,] - tab[2,]
mean <- tab[2,]
out <- data.frame(low,mean,up)
return(out)
}
round(formtab(tabEr),5)
round(formtab( tabga ),5)
round(formtab( tabgb ),5)
round(formtab(apply(norm,2,probBe7)),2)
round(formtab(apply(sigscat,2,probBe7)),2)
samp
round(formtab(apply(sigscat,2,probBe7)),2)
round(formtab(apply(sigscat,2,probBe7)),3)
round(formtab(apply(sigscat,2,probBe7)),2)
round(formtab(apply(norm,2,probBe7)),2)
head(samp)
an <- apply(samp[,c("ra","rb")],2,probBe7)
round(formtab( an ),5)
round(formtab( an ),2)
round(formtab(tabEr),5)
round(formtab(tabEr),4)
round(formtab(tabEr),4)
round(formtab( tabga ),4)
round(formtab( tabgb ),4)
exp(1.02)
log(1.02)
log(1.016)
log(1.076)
library(mathart)
install.packages("mathart")
devtools::install_github("marcusvolz/mathart")
library(mathart)
library(ggart)
library(ggforce)
library(Rcpp)
library(tidyverse)
devtools::install_github("marcusvolz/ggart")
library(mathart)
library(ggart)
library(ggforce)
library(Rcpp)
library(tidyverse)
df <- lissajous(a = runif(1, 0, 2), b = runif(1, 0, 2), A = runif(1, 0, 2), B = runif(1, 0, 2), d = 200) %>%
sample_n(1001) %>%
k_nearest_neighbour_graph(40)
p <- ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal() +
theme_blankcanvas(margin_cm = 0)
p
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal()
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal() +
theme_blankcanvas(margin_cm = 0)
df <- lissajous(a = runif(1, 0, 2), b = runif(1, 0, 2), A = runif(1, 0, 2), B = runif(1, 0, 2), d = 200) %>%
sample_n(1001) %>%
k_nearest_neighbour_graph(40)
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal() +
theme_blankcanvas(margin_cm = 0)
df <- lissajous(a = runif(1, 0, 2), b = runif(1, 0, 2), A = runif(1, 0, 2), B = runif(1, 0, 2), d = 200) %>%
sample_n(1001) %>%
k_nearest_neighbour_graph(40)
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal() +
theme_blankcanvas(margin_cm = 0)
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03) +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white'))
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="white") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white'))
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="white") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text","Rafael S. de Souza")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="cyan3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white'))
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white'))
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = -10, y = 84.5, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = -1, y = 1, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = -1, y = -1, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 1, y = -1.5, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 0.5, y = -1.25, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 0.5, y = -1.35, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 0.75, y = -1.35, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 0.75, y = -1.375, label = "Rafael S. de Souza",color="white")
ggplot() +
geom_segment(aes(x, y, xend = xend, yend = yend), df, size = 0.03,color="red3") +
coord_equal() +
theme_blankcanvas(margin_cm = 0) +
theme(panel.background = element_rect(fill = 'black', colour = 'white')) +
annotate("text", x = 0.75, y = -1.325, label = "Rafael S. de Souza",color="white")
Seed<-.Random.seed
Seed
