ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
#  coord_cartesian(ylim=c(0.9,1.06),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.7,1.1),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.8,1.1),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.15),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.05),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
pdf("Be7_NAratio.pdf", width=7.5, height=5)
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.05),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"))
dev.off()
pdf("Be7_NAratio.pdf", width=7.5, height=5)
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.05),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")))
dev.off()
pdf("Be7_NAratio.pdf", width=7.5, height=5)
ggplot(joint,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper,alpha=data),show.legend=FALSE) +
scale_alpha_manual(values=c(1,0.375))+
geom_line(size=0.5) +
coord_cartesian(ylim=c(0.85,1.05),xlim=c(0.00125,1)) +
theme_economist_white() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_discrete_qualitative(name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.45,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
strip.text = element_text(size=10),
strip.background = element_rect("gray85"),
axis.text.y = element_text(size = 16, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 16, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")))
dev.off()
Be7np
Be7np$E
range(Be7np$E)
1480+613+180+97+28+20+10
2500/30
require(plyr)
require(ggridges)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors(samp)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf",adjust=1.5,normalize="panels") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors(samp)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf",adjust=2,normalize="panels") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors(samp)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors(samp)
pdf("Be7_norm.pdf", width=5, height=7.5)
plot_normfactors(samp)
dev.off()
pdf("Be7_norm.pdf", width=5, height=6)
plot_normfactors(samp)
dev.off()
pdf("Be7_norm.pdf", width=4, height=5.5)
plot_normfactors(samp)
dev.off()
citation()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
"y.norm.3.","y.norm.4.",
"y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")]))
Sa$Parameter <- revalue(Sa$Parameter,
c("y.norm.1." = "Dam18",
"y.norm.2." = "Gib59",
"y.norm.3." = "Mar19",
"y.norm.4." = "Koe88",
"y.norm.5." = "Koe88*",
"y.norm.6." = "Dam18*",
"y.norm.7." = "Gib59*",
"y.norm.8." = "Her19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=Parameter)) +
geom_vline(xintercept = 1,linetype="dashed",color="gray30") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels") +
#  stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE,
#                     quantile_lines = FALSE,bandwidth = 0.01,
#                    quantiles = c(0.025,0.975)) +
#  geom_density_ridges(stat = "binline", binwidth = 0.005,
#                      scale = 1.5,panel_scaling=F, color="black",
#                      alpha = 1) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d95f02","#e41a1c","#377eb8","#984ea3",
"#4daf4a",
"#e41a1c","#e41a1c","#e41a1c",
"#e41a1c","#e41a1c")) +
scale_alpha_manual(values=c(0,1,0)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
# Plotting routines
samp <- read.csv("MCMC_ApJ_ultimaterun.csv",header = T)
en <- samp[,c('e0_1','e0_2',
'e0_3', 'e0_4',
'e0_5', 'e0_6',
'e0_7')]
pdf("Be7_norm.pdf", width=4, height=5.5)
plot_normfactors(samp)
dev.off()
dim(samp)
