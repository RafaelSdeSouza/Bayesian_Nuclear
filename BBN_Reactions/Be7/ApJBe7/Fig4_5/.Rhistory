#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#74c476","#fb6a4a")) +
scale_color_manual(name = "Probability", values = c("#00441b","#67000d")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
plot_normfactors(samp)
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
# Plot all
pdf("Be7_slice.pdf", width=7.5, height=5)
ggplot(Be7npG,aes(x=E,y=S)) +
#  geom_area(data=MBD,aes(x=x,y=y),color="#a6cee3",fill="#a6cee3",
#            size=0,alpha=0.4) +
#
#  geom_ribbon(data=gr1,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#6baed6"),show.legend=FALSE) +
geom_ribbon(data=gr1,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#e31a1c"),show.legend=FALSE) +
annotate("segment", x = 0.2, xend = 0.35, y = 5.75+2, yend = 5.75+2,size=1.5,
colour = "#e31a1c") +
annotate(geom="text", x = 1.25,  y = 5.75+2,
label=expression(2^"-"*", 0.00"),size=4) +
#  geom_ribbon(data=gr2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#74c476"),show.legend=FALSE) +
geom_ribbon(data=gr2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#008000"),show.legend=FALSE) +
annotate("segment",  x = 0.2, xend = 0.35, y = 5.25+2, yend = 5.25+2,size=1.5,
colour = "#008000") +
annotate(geom="text", x = 1.25,  y = 5.25+2,
label=expression(3^"+"*", 0.15"),size=4) +
#  geom_ribbon(data=gr3,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#BF40BF"),alpha=0.7,show.legend=FALSE) +
geom_ribbon(data=gr3,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#1f78b4"),alpha=0.95,show.legend=FALSE) +
annotate("segment", x = 0.2, xend = 0.35, y = 4.75+2, yend = 4.75+2,size=1.5,
colour = "#1f78b4") +
annotate(geom="text", x = 1.25,  y = 4.75+2,
label=expression(3^"+"*", 0.34"),size=4) +
#  geom_ribbon(data=gr4,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#E6AB02"),show.legend=FALSE) +
geom_ribbon(data=gr4,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#b15928"),show.legend=FALSE) +
annotate("segment", x = 0.2, xend = 0.35, y = 4.25+2, yend = 4.25+2,size=1.5,
colour = "#b15928") +
annotate(geom="text", x = 1.25,  y = 4.25+2,
label=expression(1^"-"*", 0.51"),size=4) +
#  geom_ribbon(data=gr6,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fccde5"),show.legend=FALSE) +
geom_ribbon(data=gr6,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#fdbf6f"),show.legend=FALSE) +
annotate("segment", x = 0.2, xend = 0.35, y = 3.25+2, yend = 3.25+2,size=1.5,
colour = "#fdbf6f") +
annotate(geom="text",  x = 1.25,  y = 3.25+2,
label=expression(2^"+"*", 1.23"),size=4) +
#  geom_ribbon(data=gr7,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("cyan"),show.legend=FALSE) +
geom_ribbon(data=gr7,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#6a3d9a"),show.legend=FALSE) +
annotate("segment",x = 0.2, xend = 0.35, y = 2.75+2, yend = 2.75+2,size=1.5,
colour = "#6a3d9a") +
annotate(geom="text",  x = 1.25,  y = 2.75+2,
label=expression(0^"+"*", 1.32"),size=4) +
#  geom_ribbon(data=gr5,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdb462"),show.legend=FALSE) +
geom_ribbon(data=gr5,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#ff7f00"),show.legend=FALSE) +
annotate("segment", x = 0.2, xend = 0.35, y = 3.75+2, yend = 3.75+2,size=1.5,
colour = "#ff7f00") +
annotate(geom="text", x = 1.25,  y = 3.75+2,
label=expression(4^"+"*", 0.96"),size=4) +
# geom_ribbon(data=grall,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fb6a4a"),show.legend=FALSE) +
geom_ribbon(data=grall,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("black"),show.legend=FALSE) +
geom_errorbar(show.legend = FALSE,aes(x=E,ymin=S-Stat,ymax=S+Stat,group=dat,color=type),alpha=0.75,size=0.5,width=0.01)+
geom_errorbar(data=absdat,show.legend = FALSE,aes(x=E,ymin=S-syst,ymax=S+syst),color="black",size=0.5,width=0.01)+
geom_point(data=Be7npG,aes(x=E,y=S,group=dat,shape=dat,color=type,fill=type,size=type,alpha=type)
) +
scale_shape_manual(guide = guide_legend(nrow = 2,
override.aes = list(size = 2.5)),
values=c(22,24,21,25,8,23),name="")+
scale_size_manual(values=c(2.85,2.6),name="",guide="none")+
scale_color_manual(name="",values=c("black","gray45"),guide="none")+
scale_alpha_manual(name="",values=c(1,0.75),guide="none")+
scale_fill_manual(values=c("black","white"),name="",guide="none") +
scale_x_log10(breaks = c(1e-8,1e-7,1e-6,1e-5,1e-4,1e-3,1e-2,1e-1,1),
labels=c(expression(10^-8),expression(10^-7),expression(10^-6),
expression(10^-5),expression(10^-4),
expression(10^-3),expression(10^-2),
expression(10^-1),"1")) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 8)) +
ylab(expression(paste(sqrt(E["c.m."]), sigma["np"], " (", sqrt(MeV), "b)"))) +
xlab(expression(paste(E["c.m."]," (MeV)"))) +
theme_cowplot() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.25,0.95),
legend.text = element_text(size=13),
legend.text.align = 1,
legend.background = element_rect(colour = "white",fill=NA),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=17.5),
axis.text  = element_text(size=16),
strip.text = element_text(size=10),
strip.background = element_rect("gray85")) +
coord_cartesian(xlim=c(1e-8,2.25),ylim=c(0.175,9.75)) +
annotate(geom="text",1e-7, 1,
label=expression(paste(NULL^"7","Be(n,p)",NULL^"7","Li")),
size=6)
dev.off()
setwd("~/Documents/GitHub/Bayesian_Nuclear/BBN_Reactions/Be7/ApJBe7/Fig4_5")
#plot R-matrix
require(truncnorm)
source('plot_Er.R')
source('plot_gb.R')
source('plot_ga.R')
source('plot_normfactor.R')
source('theme_rmatrix.R')
colpal <- c("#e31a1c","#008000","#1f78b4","#b15928",
"#ff7f00","#fdbf6f","#6a3d9a")
samp <- read.csv("..//Chains_ApJ/MCMC_ApJ_ultimaterun.csv",header = T)
"#00441b"
require(plyr)
require(ggridges)
require(ggmcmc)
require(tidybayes)
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#74c476","#fb6a4a")) +
scale_color_manual(name = "Probability", values = c("gray80","#67000d")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
require(coda)
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
require(ggthemes)
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
require(plyr)
require(ggridges)
require(ggmcmc)
require(tidybayes)
require(coda)
require(ggthemes)
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#74c476","#fb6a4a")) +
scale_color_manual(name = "Probability", values = c("gray20","gray80")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("gray80","#fb6a4a")) +
scale_color_manual(name = "Probability", values = c("gray40","#67000d")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c(,"#fb6a4a","gray80")) +
scale_color_manual(name = "Probability", values = c(,"#67000d","gray40")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#fb6a4a","gray80")) +
scale_color_manual(name = "Probability", values = c("#67000d","gray40")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
require(plyr)
require(ggridges)
require(ggmcmc)
require(tidybayes)
require(coda)
require(ggthemes)
plot_normfactors <- function(Normfit){
prior <- ggs(as.mcmc(data.frame(
Koe88 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.020)),
Dam18 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.10)),
Gib59 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.050)),
Mar19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.051)),
Cer89 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.085)),
Tom19 = rlnorm(1e4, meanlog   = 0, sdlog  = log(1.032))
))) %>% mutate(type="Prior")
#  Sa <- ggs(as.mcmc(Normfit[,c("y.norm.1.","y.norm.2.",
#                               "y.norm.3.","y.norm.4.",
#                               "y.norm.5.","y.norm.6.",
#                               "y.norm.7.",
#                               "y.norm.8.",
#                               "y.norm.9.","y.norm.10.")]))
post <- ggs(as.mcmc(Normfit[,c("y.norm.5.","y.norm.6.",
"y.norm.7.",
"y.norm.8.",
"y.norm.9.","y.norm.10.")])) %>%
mutate(type="Posterior")
post$Parameter <- revalue(post$Parameter,
c("y.norm.5." = "Koe88",
"y.norm.6." = "Dam18",
"y.norm.7." = "Gib59",
"y.norm.8." = "Mar19",
"y.norm.9." = "Cer89",
"y.norm.10." = "Tom19"))
joind <- rbind(prior,post) %>% mutate(type=as.factor(type))  %>%
mutate(Parameter=as.factor(Parameter))
gg <- ggplot(joind, aes(x = value, y=Parameter, fill=type,color=type,alpha = type)) +
geom_vline(xintercept = 1,linetype="dashed",color="black") +
stat_halfeyeh(slab_type = "pdf",adjust=3,normalize="panels",alpha=0.9) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#fb6a4a","gray80")) +
scale_color_manual(name = "Probability", values = c("#67000d","gray40")) +
scale_alpha_manual(values=c(1,1)) +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size = 12),
axis.text.x   = element_text(size=11.5),
axis.text.y   = element_text(size=12),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",f[k])))
return(gg)
}
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
source('plot_normfactor.R')
pdf("Be7_norm.pdf", width=3.55, height=4.25)
plot_normfactors(samp)
dev.off()
8+3180
8000+3180
11180-1700
