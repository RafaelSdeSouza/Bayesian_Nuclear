require(rjags)
load.module("wiener")
install.packages("mclust")
26.59+2.64+70.71+12.97+8.99+15.66+0.46+3.91+0.11+43.60+5.91+0.17+36.42+1.09+53.59+1.6+28.88+24.87+24.96+3.59
366.72+300
27-21+1
7*100
9*50
9*55
9*60
31+5
1390.20/36
1390.20+1200+500
3090/36
require(INLA)
install.packages("INLA", repos="https://inla.r-inla-download.org/R/stable")
require(INLA)
x1 <- runif(100,0,1)
f <- function(x){(x+1)/(x^2-7)}
y <- rnorm(f(x),1)
x <- runif(100,0,1)
f <- function(x){(x+1)/(x^2-7)}
y <- rnorm(f(x),1)
plot(x,y)
x <- runif(100,0,1)
f <- function(x){exp(-x)+1}
y <- rnorm(f(x),1)
plot(x,y)
f(x)
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,10)
f <- function(x){exp(-x)+1}
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,50)
f <- function(x){exp(-x)+1}
y <- rnorm(100,f(x),1)
plot(x,y)
y
f(x)
x <- runif(100,0,50)
f <- function(x){exp(x)-1}
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,10)
f <- function(x){exp(x)-1}
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,10)
f <- function(x){0.5*exp(x)-1}
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,10)
f <- function(x){0.5*exp(x/10)-1}
y <- rnorm(100,f(x),1)
plot(x,y)
x <- runif(100,0,10)
f <- function(x){0.5*exp(x/2)-1}
y <- rnorm(100,f(x),1)
plot(x,y)
data <- data.frame(x,y)
formula = y ~  alpha*exp(beta*x)-eta
result = inla(formula, family="Gaussian", data=data)
library(rjags)
## for block updating [we do not need to center predictor variables]
load.module("glm")
load.module("nuclear")
Sfactor_He3dp <- function(ECM,ER,gi,gf){
require(gsl)
# Constants
m1_i = 3.016; m2_i = 2.014;		# masses (amu) of t and d
m1_f = 2.014; m2_f = 1.0087;	# masses (amu) of n and 4He
z1_i = 4; z2_i = 1;			# charges of t and d
z1_f = 2; z2_f = 1;				#charges of n and 4He
r_i = 6.0; r_f = 5.0;			# channel radii (fm)
la = 0; lb = 2;					#orbital angular momenta of d and n
Q = 18.353053;						#reaction Q-value (MeV)
jt = 0.5; jp=1.0; jr=1.5;			#spins of target, projectile, resonance
#   DEFINITIONS
mue_i <- (m1_i*m2_i)/(m1_i+m2_i);
mue_f <- (m1_f*m2_f)/(m1_f+m2_f);
pek <- 6.56618216e-1/mue_i;
omega <- (2*jr+1)/((2*jt+1)*(2*jp+1));
#     ----------------------------------------------------
#     PENETRABILITY AND SHIFT FUNCTION AT ER
#     ----------------------------------------------------
eta_a=.15748927*z2_i*z1_i*sqrt(mue_i)
rho_a=.218735097*r_i*sqrt(mue_i)
reta_i=eta_a/(sqrt(ER))
rrho_i=rho_a*(sqrt(ER))
P1 <- coulomb_wave_FG(reta_i, rrho_i, la, k=0)
pr_i <- rrho_i/(P1$val_F^2 + P1$val_G^2)
sr_i <- rrho_i*(P1$val_F*P1$val_Fp + P1$val_G*P1$val_Gp)/(P1$val_F^2 + P1$val_G^2)
ga <- 2*gi*pr_i
eta_b=.15748927*z2_f*z1_f*sqrt(mue_f)
rho_b=.218735097*r_f*sqrt(mue_f)
reta_f=eta_b/(sqrt(ER+Q))
rrho_f=rho_b*(sqrt(ER+Q))
P2 <- coulomb_wave_FG(reta_f, rrho_f, lb, k=0)
pr_f <- rrho_f/(P2$val_F^2 + P2$val_G^2)
sr_f <- rrho_f*(P2$val_F*P2$val_Fp + P2$val_G*P2$val_Gp)/(P2$val_F^2 + P2$val_G^2)
gb <- 2*gf*pr_f
# CALCULATE S-FACTOR
etpe_i=exp(0.989534267*z1_i*z2_i*sqrt(mue_i/ECM))
eta_i=eta_a/(sqrt(ECM))
rho_i=rho_a*(sqrt(ECM))
P3 <- coulomb_wave_FG(eta_i, rho_i, la, k=0)
p_i <- rho_i/(P3$val_F^2 + P3$val_G^2)
s_i <- rho_i*(P3$val_F*P3$val_Fp + P3$val_G*P3$val_Gp)/(P3$val_F^2 + P3$val_G^2)
prat_i=p_i/pr_i
eta_f=eta_b/(sqrt(ECM+Q))
rho_f=rho_b*(sqrt(ECM+Q))
P4 <- coulomb_wave_FG(eta_f, rho_f, lb, k=0)
p_f <- rho_f/(P4$val_F^2 + P4$val_G^2)
s_f <- rho_f*(P4$val_F*P4$val_Fp + P4$val_G*P4$val_Gp)/(P4$val_F^2 + P4$val_G^2)
prat_f=p_f/pr_f
tapp <- (s_i-sr_i)*gi+(s_f-sr_f)*gf
s1=pek*etpe_i*omega*prat_i*prat_f*ga*gb
s2=((ER-ECM-tapp)^2)+0.25*((ga*prat_i+gb*prat_f)^2)
SF <- s1/s2
return(SF = SF)
}
setwd("~/Documents/GitHub/JAGS_UNC/R_script/He3dp")
N <- 30
obsx1 <- exp(seq(log(1e-3), log(1),length.out=N))
res <- vector()
obsy1 <- vector()
errobsy1 <- vector()
# Barker values:
# Er  = 0.0912 MeV
# g^2_in = 2.93 MeV         ! reduced width of deuteron
# g^2_out = 0.0794 MeV      ! reduced width of neutron
#res[2] <-  0.35779  # resonance energy
res[2] <-  0.35  # resonance energy
res[3] <-  1.0085    # reduced width incoming
res[4] <- 0.025425   # reduced width outgoing
for (i in 1:length(obsx1)){
res[1] <- obsx1[i]
write.table(res, file="He3dp_AD.in", quote=TRUE,
row.names=FALSE, col.names=FALSE)
# Load the fortran code needed to calculate S-factor curve
if(!is.loaded("He3dp_AD_Sub"))
dyn.load("He3dp_AD.so")
.Fortran("He3dp_AD_Sub")
tab1 <- read.table("He3dp_AD.out", header=FALSE)
errobsy1[i] <- 0.1
obsy1[i] <- rnorm( 1, tab1[1,2], errobsy1[i] )
}
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(x1,0.0912,2.93,0.0794),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(obsx1,0.0912,2.93,0.0794),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(obsx1,0.35,1.0085,0.025425),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(obsx1,0.35,1.0085,0.025425),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(obsx1,0.35,1.0085,0.025425),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
Sfactor_He3dp(obsx1,0.35,1.0085,0.025425)
obsx1
obsy1
Sfactor_He3dp <- function(ECM,ER,gi,gf){
require(gsl)
# Constants
m1_i = 3.016; m2_i = 2.014;		# masses (amu) of t and d
m1_f = 2.014; m2_f = 1.0087;	# masses (amu) of n and 4He
z1_i = 4; z2_i = 1;			# charges of t and d
z1_f = 2; z2_f = 1;				#charges of n and 4He
r_i = 6.0; r_f = 5.0;			# channel radii (fm)
la = 0; lb = 2;					#orbital angular momenta of d and n
Q = 18.353053;						#reaction Q-value (MeV)
hm = 20.9          # "hm" is Pierre's constant (hbar.c)^2/(2u) i.e. (197.3)^2/(2*931) = 20.9
jt = 0.5; jp=1.0; jr=1.5;			#spins of target, projectile, resonance
#   DEFINITIONS
mue_i <- (m1_i*m2_i)/(m1_i+m2_i);
mue_f <- (m1_f*m2_f)/(m1_f+m2_f);
#
hmi=hm/mue_i
hmf=hm/mue_f
#
pek <- 6.56618216e-1/mue_i;
omega <- (2*jr+1)/((2*jt+1)*(2*jp+1));
#     ----------------------------------------------------
#     PENETRABILITY AND SHIFT FUNCTION AT ER
#     ----------------------------------------------------
#  eta_a=.15748927*z2_i*z1_i*sqrt(mue_i)
eta_a = 1.44*z2_i*z1_i/(2*hmi)
rho_a=.218735097*r_i*sqrt(mue_i)
reta_i=eta_a/(sqrt(ER))
rrho_i=rho_a*(sqrt(ER))
P1 <- coulomb_wave_FG(reta_i, rrho_i, la, k=0)
pr_i <- rrho_i/(P1$val_F^2 + P1$val_G^2)
sr_i <- rrho_i*(P1$val_F*P1$val_Fp + P1$val_G*P1$val_Gp)/(P1$val_F^2 + P1$val_G^2)
ga <- 2*gi*pr_i
# eta_b=.15748927*z2_f*z1_f*sqrt(mue_f)
eta_b=1.44*z2_i*z1_i/(2*hmf)
rho_b=.218735097*r_f*sqrt(mue_f)
reta_f=eta_b/(sqrt(ER+Q))
rrho_f=rho_b*(sqrt(ER+Q))
P2 <- coulomb_wave_FG(reta_f, rrho_f, lb, k=0)
pr_f <- rrho_f/(P2$val_F^2 + P2$val_G^2)
sr_f <- rrho_f*(P2$val_F*P2$val_Fp + P2$val_G*P2$val_Gp)/(P2$val_F^2 + P2$val_G^2)
gb <- 2*gf*pr_f
# CALCULATE S-FACTOR
etpe_i=exp(0.989534267*z1_i*z2_i*sqrt(mue_i/ECM))
eta_i=eta_a/(sqrt(ECM))
rho_i=rho_a*(sqrt(ECM))
P3 <- coulomb_wave_FG(eta_i, rho_i, la, k=0)
p_i <- rho_i/(P3$val_F^2 + P3$val_G^2)
s_i <- rho_i*(P3$val_F*P3$val_Fp + P3$val_G*P3$val_Gp)/(P3$val_F^2 + P3$val_G^2)
prat_i=p_i/pr_i
eta_f=eta_b/(sqrt(ECM+Q))
rho_f=rho_b*(sqrt(ECM+Q))
P4 <- coulomb_wave_FG(eta_f, rho_f, lb, k=0)
p_f <- rho_f/(P4$val_F^2 + P4$val_G^2)
s_f <- rho_f*(P4$val_F*P4$val_Fp + P4$val_G*P4$val_Gp)/(P4$val_F^2 + P4$val_G^2)
prat_f=p_f/pr_f
tapp <- (s_i-sr_i)*gi+(s_f-sr_f)*gf
s1=pek*etpe_i*omega*prat_i*prat_f*ga*gb
s2=((ER-ECM-tapp)^2)+0.25*((ga*prat_i+gb*prat_f)^2)
SF <- s1/s2
return(SF = SF)
}
plot(obsx1,obsy1,col="green",log="x",ylim=c(0,35),xlim=c(1e-3,1),cex=1.5)
#par(new=TRUE)
lines(obsx1,Sfactor_He3dp(obsx1,0.35,1.0085,0.025425),ylim=c(0,35),
xlim=c(1e-3,1),col="red",cex=1.25)
Sfactor_He3dp(obsx1,0.35,1.0085,0.025425)
malu <- read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv")
malu
malu[1,]
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == "pnew")
require(magrittr);require(dplyr)
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == "pnew")
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == "pnew[]")
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == grep("pnew"))
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == grepl("pnew"))
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == grepl("^1", pnew))
malu
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == grepl("^1", "pnew"))
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,parameter == grepl("^p"))
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,grepl("^p",parameter))
read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,grepl("^pnew",parameter))
malu <- read.csv("/Users/rafaeldesouza/Downloads/fit_results.csv") %>%
filter(.,grepl("^pnew",parameter))
head(malu)
read.csv("/Users/rafaeldesouza/Downloads/model_prob.csv")
read.csv("/Users/rafaeldesouza/Downloads/model_prob.csv")[,2]
redshift <- read.csv("/Users/rafaeldesouza/Downloads/model_prob.csv")[,2]
redshift
y <- malu
x <- xx
y <- malu
x <- redshift
y[,"mean"]
gdata <- data.frame(x =redshift, mean = y[,"mean"],lwr1=y[,"25%"],lwr2=y[,"2.5%"],upr1=y[,"75%"],upr2=y[,"97.5%"])
y
y[,"X2.5."]
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_errorbar(data=gbin,aes(x=x,y=y,ymin=y-2*means.se,ymax=y+2*means.se),alpha=0.85,
colour="#dd0100",width=0.005)+
geom_line(data=gdata,aes(x=xx,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
require(ggplot2)
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_errorbar(data=gbin,aes(x=x,y=y,ymin=y-2*means.se,ymax=y+2*means.se),alpha=0.85,
colour="#dd0100",width=0.005)+
geom_line(data=gdata,aes(x=xx,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
gdata <- data.frame(x =redshift, mean = y[,"mean"],lwr1=y[,"X25."],lwr2=y[,"X2.5."],upr1=y[,"X75."],upr2=y[,"X97.5."])
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_errorbar(data=gbin,aes(x=x,y=y,ymin=y-2*means.se,ymax=y+2*means.se),alpha=0.85,
colour="#dd0100",width=0.005)+
geom_line(data=gdata,aes(x=xx,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_line(data=gdata,aes(x=xx,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=redshift,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=redshift,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_line(data=gdata,aes(x=redshift,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
y
redshift
hist(redshift)
order(redshift)
y <- malu[index ,]
x <- redshift[index]
gdata <- data.frame(x =redshift, mean = y[,"mean"],lwr1=y[,"X25."],lwr2=y[,"X2.5."],upr1=y[,"X75."],upr2=y[,"X97.5."])
ggplot(gdata,aes(x=redshift,y=mean))+
geom_ribbon(data=gdata,aes(x=redshift,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.95, fill = c("#fac901"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=redshift,ymin=lwr1, ymax=upr1,y=NULL), alpha=0.95, fill=c("#225095"),show.legend=FALSE) +
geom_line(data=gdata,aes(x=redshift,y=mean),colour="#ffffff",linetype="dashed",size=1,show.legend=FALSE)+
theme_bw() + xlab("Redshift") + ylab("UV/Red-sequence")
