tracePlot(sampler = res, start = 1000, whichParameters = c(1,2,3,19))
tracePlot(sampler = res, start = 10000, whichParameters = c(1,2,3,19))
tracePlot(sampler = res, start = 25000, whichParameters = c(1,2,3,19))
tracePlot(sampler = res, start = 50000, whichParameters = c(1,2,3,19))
tracePlot(sampler = res, start = 100000, whichParameters = c(1,2,3,19))
100000:
mo <- mcmc_out(res,vars=c("e0","gd2","gn2"))
mcmc_out <- function(out = out, vars = vars){
as.data.frame(do.call(rbind, out$chain[,vars]))
}
mo <- mcmc_out(res,vars=c("e0","gd2","gn2"))
mo <- mcmc_out(res,vars=c("e0","gd2","gn2"))[100000:900003,]
hist(mo )
hist(mo$e0)
plot(density(mo$e0))
density(mo$e0)
mo$e0
hist(mo$e0)
density(mo$e0)
head(mo)
mo <- mcmc_out(res,vars=c("e0","gd2","gn2",to("sigma_scat", 5),to("scale", 5),to("xnorm", 5),"ue"))[100000:900003,]
head(mo)
sample(10,1:length(mo),replace=F)
sample(1:length(mo),10,replace=F)
index <- sample(1:length(mo),50000,replace=F)
short_mo <- mo[index ,]
sample(1:length(mo),50000,replace=F)
length(mo)
mo
nrow(mo)
index <- sample(1:nrow(mo),50000,replace=F)
short_mo <- mo[index ,]
short_mo
write.matrix(short_mo,"BT_Tdn_caseI",row.names(F))
require(MASS)
write.matrix(short_mo,"BT_Tdn_caseI",row.names(F))
write.matrix(short_mo,"BT_Tdn_caseI.dat",row.names(F))
short_mo
write.matrix(short_mo,"BT_Tdn_caseI.dat",row.names=F)
write.matrix(short_mo,"BT_Tdn_caseI.dat")
2239.782/60
head(mo )
re
19:23
likelihood <- function(par){
e0 = par[1]
gin = par[2]
gout = par[3]
yscat = par[4:8]
ynorm = par[9:13]
xscat = par[14:18]
xnorm = par[19:23]
ue = par[24]
y = par[25:(N + 24)]
xtrue = par[(N + 25):(2*N + 24)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log=T))
llynorm = sum(dlnorm(scale,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llx <- sum(dnorm(obsx,mean = xtrue + xnorm[re],sd=(errx + xscat[re]),log=T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xtrue, e0,e0,gin, gout,6,5,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
return(llynorm + llobs + lly + llx + llxnorm)
}
likelihood(up)
up
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx))
up <- c(1,6,6,rep(1,5),rep(1.2,5),rep(2,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx))
likelihood(up)
likelihood <- function(par){
e0 = par[1]
gin = par[2]
gout = par[3]
yscat = par[4:8]
ynorm = par[9:13]
xscat = par[14:18]
xnorm = par[19:23]
ue = par[24]
y = par[25:(N + 24)]
xtrue = par[(N + 25):(2*N + 24)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log=T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llx <- sum(dnorm(obsx,mean = xtrue + xnorm[re],sd=(errx + xscat[re]),log=T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xtrue, e0,e0,gin, gout,6,5,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
return(llynorm + llobs + lly + llx + llxnorm)
}
likelihood(up)
likelihood(low)
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 3,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 1,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 +d9)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 1,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N)))
settings <- list(iterations = 15000,adaptation = 0.5,
burnin = 6000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 100, whichParameters = c(1,2,3,19))
tracePlot(sampler = res, start = 100, whichParameters = c(1,2,3,24))
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx))
up <- c(1,50,50,rep(1,5),rep(1.2,5),rep(2,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx))
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 3,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 1,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 +d9)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 1,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N)))
settings <- list(iterations = 15000,adaptation = 0.5,
burnin = 6000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 100, whichParameters = c(1,2,3,24))
settings <- list(iterations = 150000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 100, whichParameters = c(1,2,3,24))
mcmc_out <- function(out = out, vars = vars){
as.data.frame(do.call(rbind, out$chain[,vars]))
}
mo <- mcmc_out(res,vars=c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue"))
head(mo)
errx
likelihood <- function(par){
e0 = par[1]
gin = par[2]
gout = par[3]
yscat = par[4:8]
ynorm = par[9:13]
xscat = par[14:18]
xnorm = par[19:23]
ue = par[24]
y = par[25:(N + 24)]
xx = par[(N + 25):(2*N + 24)]
xtrue = par[(2*N + 25):(3*N + 24)]
llxnorm = sum(dnorm(xnorm,mean=0,sd=systx,log=T))
llynorm = sum(dlnorm(ynorm,meanlog = log(1), sdlog = log(1 + syst^2), log = T))
llxt <- sum(dnorm(xx,mean = xtrue,sd=xscat[re],log=T))
llxx <- sum(dnorm(obsx,mean = xx + xnorm[re],sd=errx,log=T))
lly <- sum(dnorm(y,mean = ynorm[re]*SfacTdn(xtrue, e0,e0,gin, gout,6,5,ue), sd = yscat[re],  log = T))
llobs = sum(dnorm(obsy,mean = y,sd = erry,log = T))
return(llynorm + llobs + lly + llxx + llxt + llxnorm)
}
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,50,50,rep(1,5),rep(1.2,5),rep(2,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx - abs(errx))
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 1,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 800000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
likelihood(up)
likelihood(low)
density(up)
density(low)
sampler()
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N),to("xt", N)))
setup
settings <- list(iterations = 800000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
prior
prior[333:500,]
prior[333:(333+188),]
prior$sampler()
prior$lower
prior$upper
range(prior$upper)
range(prior$lower)
range(prior$best)
c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N),to("xt", N)
c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N),to("xt", N))
c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue",
to("y", N),to("x", N),to("xt", N))
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 800000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
density(up)
density(low)
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 3,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 1,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
density(low)
density(up)
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,50,50,rep(1,5),rep(1.2,5),rep(2,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 3,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 1,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 1,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 800000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 10000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 100000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 200000, whichParameters = c(1,2,3,24))
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,5,5,rep(1,5),rep(1.2,5),rep(2,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 2,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 1,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 1,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
mcmc_out <- function(out = out, vars = vars){
as.data.frame(do.call(rbind, out$chain[,vars]))
}
mo <- mcmc_out(res,vars=c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue"))
head(mo)
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,5,5,rep(1,5),rep(1.2,5),rep(0.03,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,5,5,rep(1,5),rep(1.2,5),rep(0.03,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 2,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 0.01,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 0.01,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 80000,adaptation = 0.5,
burnin = 6000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 200000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 2000, whichParameters = c(1,2,3,24))
mo <- mcmc_out(res,vars=c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue"))
head(mo)
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,10,10,rep(1,5),rep(1.2,5),rep(0.03,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 2,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 0.01,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 0.01,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = NULL)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 80000,adaptation = 0.5,
burnin = 6000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 2000, whichParameters = c(1,2,3,24))
settings <- list(iterations = 500000,adaptation = 0.5,
burnin = 600000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
settings <- list(iterations = 500000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 2000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 20000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 50000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 500000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 100000, whichParameters = c(1,2,3,24))
mo <- mcmc_out(res,vars=c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue"))
head(mo)
hist(mo$xscat1)
0.1*up
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = 0.1*up)
best <- c(0.1,1,1,rep(1,5),rep(1,5),rep(1,5),rep(0.1,5),20,(obsy + 2*abs(erry))/2,(obsx + abs(errx))/2,(obsx + abs(errx))/2)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up, best = best,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = best)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up, best = best,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 50000,adaptation = 0.5,
burnin = 6000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 100000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 1000, whichParameters = c(1,2,3,24))
settings <- list(iterations = 200000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 1000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 100000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 10000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 50000, whichParameters = c(1,2,3,24))
tracePlot(sampler = res, start = 20000, whichParameters = c(1,2,3,24))
low <- c(1e-3,1e-3,1e-3,rep(1e-4,5),rep(0.8,5),rep(1e-5,5), rep(-0.8,5),0,obsy - 2*abs(erry),obsx - abs(errx),obsx - abs(errx))
up <- c(1,20,20,rep(1,5),rep(1.2,5),rep(0.03,5),rep(0.2,5),100,obsy + 2*abs(erry),obsx + abs(errx),obsx + abs(errx))
#best <- c(0.1,1,1,rep(1,5),rep(1,5),rep(1,5),rep(0.1,5),20,(obsy + 2*abs(erry))/2,(obsx + abs(errx))/2,(obsx + abs(errx))/2)
density = function(par){
d1 = dnorm(par[1], mean = 0, sd = 1, log = TRUE)
d2 = sum(dtnorm(par[2:3], mean = 0, sd = 2,log = TRUE))
d3 = sum(dtnorm(par[4:8], 0, 1,log = TRUE))
d4 = sum(dlnorm(par[9:13],1,log(1 + syst^2),log = TRUE))
d5 = sum(dtnorm(par[14:18],0, 0.01,log = TRUE))
d6 = sum(dnorm(par[19:23],0,sd=systx,log = TRUE))
d7 = dtnorm(par[24], 0, 1000,log = TRUE)
d8 = sum(dnorm(par[25:(N + 24)],mean=obsy,sd=erry,log = TRUE))
d9 = sum(dunif(par[(N + 25):(2*N + 24)],0.001,0.3,log = TRUE))
d10 = sum(dunif(par[(2*N + 25):(3*N + 24)],0.001,0.3,log = TRUE))
return(d1 + d2 + d3 + d4 + d5 + d6 + d7 +d8 + d9 + d10)
}
sampler = function(){
d <- list()
d[1] = runif(1, 0,  1)
d[2:3] = rtnorm(2, 0,  3,low=0)
d[4:8] = rtnorm(5, 0, 1,low=0)
d[9:13] = rtnorm(5, 1, log(1 + syst^2))
d[14:18] = rtnorm(5, 0, 0.01,low=0)
d[19:23] = rnorm(5, 0, systx)
d[24] = rtnorm(1, 0, 100,low=0)
d[25:(N + 24)] = rnorm(N, obsy, erry)
d[(N + 25):(2*N + 24)] = runif(N,0.001,0.3)
d[(2*N + 25):(3*N + 24)] = runif(N,0.001,0.3)
return(as.numeric(d))
}
prior <- createPrior(density = density, sampler = sampler,
lower = low, upper = up, best = best)
setup <- createBayesianSetup(likelihood = likelihood,  priorSampler = sampler,lower = low, upper = up, best = best,
names = c("e0","gd2","gn2",to("yscat", 5),to("ynorm", 5),to("xscat", 5),
to("xnorm", 5),"ue", to("y", N),to("x", N),to("xt", N)))
settings <- list(iterations = 200000,adaptation = 0.5,
burnin = 60000, message = T,nrChains = 1)
res <- runMCMC(bayesianSetup = setup, settings = settings,sampler = "DREAMzs")
tracePlot(sampler = res, start = 20000, whichParameters = c(1,2,3,24))
