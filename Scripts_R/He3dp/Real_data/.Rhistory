theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# Delta  Bare
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.5),ylim=c(-0.075,0.075)) +
theme_bw() + xlab("Energy (MeV)") + ylab(expression(delta["S"])) +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
pdf("plot/Delta_models.pdf",height = 7,width = 10)
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# Delta  Bare
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.5),ylim=c(-0.075,0.075)) +
theme_bw() + xlab("Energy (MeV)") + ylab(expression(delta["S"])) +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
dev.off()
setwd("~/Documents/GitHub/JAGS_UNC/Scripts_R/He3dp/Real_data")
setwd("~/Documents/GitHub/JAGS_UNC/Scripts_R/He3dp/Real_data")
# 3Hedp analysis
#
# purpose: Real  DATA
#
# - 5 parameters are assumed: Er, gamma_d^2, gamma_n^2 [e1, gin, gout]
#
# - uses the function sfactorHe3dp(obsx1[i], e1, gin, gout), which
#   is a C++ version of a Fortran code that includes Coulomb wave
#   function calculations; JAGS has been recompiled with this C++ function
#
######################################################################
# preparation: remove all variables from the work space
#rm(list=ls())
set.seed(42)
######################################################################
# data input
# format: obsx, obsy, errobsy; the latter are the individual statistical
# errors of each datum [i]
#
# energy is in units of MeV, and the S-factor in MeVb;
######################################################################
# import packages
library(rjags);library(R2jags);library(mcmcplots)
require(RcppGSL);require(ggplot2);require(ggthemes)
require(nuclear);library(magrittr);library(wesanderson)
library(dplyr);require(ggsci);require(ggmcmc);require(plyr);library(latex2exp)
require(MCMCvis)
source("..//..//auxiliar_functions/jagsresults.R")
source("..//..//auxiliar_functions/theme_rafa.R")
source("..//..//auxiliar_functions/pair_wise_plot.R")
source("..//..//auxiliar_functions/Gamma3Hedp.R")
## for block updating [we do not need to center predictor variables]
load.module("glm")
load.module("nuclear")
######################################################################
## Read DATA
ensamble <- read.csv("ensamble.csv",header = T) %>%
mutate(Syst=replace(Syst,Syst==0.06,0.078))  %>% filter(E <= 0.5)
re <- as.numeric(ensamble$dat)
Nre <- length(unique(ensamble$dat))
ik <- as.numeric(ensamble$invK)
Nik <- length(unique(ensamble$invK))
# Radius
# r_i = 6
# r_f = 5
# Literature
#  0.35779   # resonance energy
#  1.0085    # reduced width incoming
#  0.025425   # reduced width outgoing
N <- nrow(ensamble)
obsy <- ensamble$S    # Response variable
obsx <-  ensamble$E   # Predictors
erry <- ensamble$Stat
set <- ensamble$dat
lab <- ensamble$invK
syst = c(0.03,unique(ensamble$Syst))
#syst <- syst[-3]
M <- 500
xx <- seq(min(obsx),max(obsx),length.out = M)
model.data <- list(obsy = obsy,    # Response variable
obsy2 = obsy,    # Response variable
obsx =  obsx,   # Predictors
erry = erry,
N = nrow(ensamble), # Sample size
syst = syst,
Nre = Nre,
re = re,
Nik = Nik,
ik  = ik,
M = M,
xx = xx
)
# Conversative case
######################################################################
Model <- "model{
# LIKELIHOOD informative
for (i in 1:N) {
obsy[i] ~ dnorm(y[i], pow(erry[i], -2))
y[i] ~ dnorm(scale[re[i]]*sfactor3Hedp(obsx[i], e1, ex, gin, gout,ri,rf,ue[ik[i]]),pow(tau, -2))
res[i] <- obsy[i]-sfactor3Hedp(obsx[i], e1,ex, gin, gout,ri,rf,0)
}
# LIKELIHOOD broad
for (i in 1:N) {
obsy2[i] ~ dnorm(y_2[i], pow(erry[i], -2))
y_2[i] ~ dnorm(scale[re[i]]*sfactor3Hedp(obsx[i], e1_2, ex_2, gin_2, gout_2,ri_2,rf_2,ue[ik[i]]),pow(tau_2, -2))
}
RSS <- sum(res^2)
# Predicted values
for (j in 1:M){
# Bare...
mux0[j] <- sfactor3Hedp(xx[j], e1,ex, gin, gout,ri,rf,0)
mux0_2[j] <- sfactor3Hedp(xx[j], e1_2,ex_2, gin_2, gout_2,ri_2,rf_2,0)
DeltaM[j] <- (mux0[j] - mux0_2[j])/mux0[j]
# No inverse Kinematics
mux1[j] <- sfactor3Hedp(xx[j], e1, ex,gin, gout,ri,rf,ue[1])
yx1[j] ~ dnorm(mux1[j],pow(tau,-2))
# With inverse Kinematics
mux2[j] <- sfactor3Hedp(xx[j], e1,ex, gin, gout,ri,rf,ue[2])
yx2[j] ~ dnorm(mux1[j],pow(tau,-2))
}
for (k in 1:Nre){
scale[k] ~ dlnorm(log(1.0),1/log(1+pow(syst[k],2)))
}
for (z in 1:Nik){
ue[z] ~ dnorm(0,1e3)T(0,)
}
# PRIORS 1
tau ~  dunif(0.01,5)
e1 ~  dunif(0,5)
ex <-  e1
gin ~  dunif(0,5)
gout ~ dunif(0,5)
rf ~  dnorm(5, pow(0.1,-2))T(0,)
ri ~  dnorm(5, pow(0.1,-2))T(0,)
tau_2 ~ dunif(0.01,5)
e1_2  ~  dunif(0,5)
ex_2  ~   dunif(0,5)
gin_2 ~  dunif(0,20)
gout_2 ~ dunif(0,20)
rf_2 ~  dunif(0,50)
ri_2 ~  dunif(0,50)
}"
######################################################################
# n.adapt:  number of iterations in the chain for adaptation (n.adapt)
#           [JAGS will use to choose the sampler and to assure optimum
#           mixing of the MCMC chain; will be discarded]
# n.udpate: number of iterations for burnin; these will be discarded to
#           allow the chain to converge before iterations are stored
# n.iter:   number of iterations to store in the final chain as samples
#           from the posterior distribution
# n.chains: number of mcmc chains
# n.thin:   store every n.thin element [=1 keeps all samples]
inits <- function () { list(e1 = runif(1,0.35,2),gout=runif(1,0.01,0.5),gin=runif(1,0.5,3)) }
# "f": is the model specification from above;
# data = list(...): define all data elements that are referenced in the
Normfit <- jags(data = model.data,
inits = inits,
parameters.to.save  = c("e1","gin", "gout","ue","tau", "ri","rf","RSS","mux0","mux1","mux2","scale","DeltaM",
"e1_2","gin_2", "gout_2","tau_2","ri_2","rf_2" ),
model.file  = textConnection(Model),
n.thin = 1,
n.chains = 3,
n.burnin = 5000,
n.iter = 20000)
y <- jagsresults(x=Normfit , params=c('mux1'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
x <- xx
gdata <- data.frame(x =xx, mean = y[,"mean"],lwr1=y[,"25%"],lwr2=y[,"2.5%"],lwr3=y[,"0.5%"],upr1=y[,"75%"],
upr2=y[,"97.5%"],upr3=y[,"99.5%"])
gobs <- data.frame(obsx,obsy,erry,set,lab)
gobs$set <- as.factor(gobs$set)
y2 <- jagsresults(x=Normfit , params=c('mux2'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata2 <- data.frame(x =xx, mean = y2[,"mean"],lwr1=y2[,"25%"],lwr2=y2[,"2.5%"],lwr3=y2[,"0.5%"],upr1=y2[,"75%"],
upr2=y2[,"97.5%"],upr3=y2[,"99.5%"])
y0 <- jagsresults(x=Normfit , params=c('mux0'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata0 <- data.frame(x =xx, mean = y0[,"mean"],lwr1=y0[,"25%"],lwr2=y0[,"2.5%"],lwr3=y0[,"0.5%"],upr1=y0[,"75%"],
upr2=y0[,"97.5%"],upr3=y0[,"99.5%"])
ggplot(gobs,aes(x=obsx,y=obsy))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# red
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#fdd0a2"),show.legend=FALSE)+
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdae6b"),show.legend=FALSE) +
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#d94801"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("gray95"),show.legend=FALSE)+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("gray75"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("gray55"),show.legend=FALSE) +
#  Bare
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#
#
geom_point(data=gobs,aes(x=obsx,y=obsy,group=set,color=set,shape=set),size=2.75,alpha=0.75)+
geom_errorbar(show.legend=FALSE,data=gobs,aes(x=obsx,y=obsy,ymin=obsy-erry,ymax=obsy+erry,group=set,color=set),
width=0.01,alpha=0.4)+
#  geom_line(data=gdata,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
#  geom_line(data=gdata2,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
scale_colour_manual(name="",values=c("gray20","#7f0000","#7f0000","gray20","gray20",
"gray20","gray20"))+
scale_shape_manual(values=c(0,19,8,10,4,17,3),name="")+
coord_cartesian(xlim=c(5e-3,0.6),ylim=c(0.5,19)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-Factor (MeV b)") +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
ggplot(gobs,aes(x=obsx,y=obsy))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# red
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#fdd0a2"),show.legend=FALSE)+
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdae6b"),show.legend=FALSE) +
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#d94801"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("gray95"),show.legend=FALSE)+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("gray75"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("gray55"),show.legend=FALSE) +
#  Bare
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#
#
geom_point(data=gobs,aes(x=obsx,y=obsy,group=set,color=set,shape=set),size=2.75,alpha=0.75)+
geom_errorbar(show.legend=FALSE,data=gobs,aes(x=obsx,y=obsy,ymin=obsy-erry,ymax=obsy+erry,group=set,color=set),
width=0.01,alpha=0.4)+
#  geom_line(data=gdata,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
#  geom_line(data=gdata2,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
scale_colour_manual(name="",values=c("gray20","#7f0000","#7f0000","gray20","gray20",
"gray20","gray20"))+
scale_shape_manual(values=c(0,19,8,10,4,17,3),name="")+
coord_cartesian(xlim=c(5e-3,0.6),ylim=c(0.5,19)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-Factor (MeV b)") +
# scale_x_log10()  +
#  annotation_logticks(sides = "b") +
# annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
pdf("plot/He3dp_syst_l.pdf",height = 7,width = 10)
ggplot(gobs,aes(x=obsx,y=obsy))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# red
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#fdd0a2"),show.legend=FALSE)+
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdae6b"),show.legend=FALSE) +
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#d94801"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("gray95"),show.legend=FALSE)+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("gray75"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("gray55"),show.legend=FALSE) +
#  Bare
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#
#
geom_point(data=gobs,aes(x=obsx,y=obsy,group=set,color=set,shape=set),size=2.75,alpha=0.75)+
geom_errorbar(show.legend=FALSE,data=gobs,aes(x=obsx,y=obsy,ymin=obsy-erry,ymax=obsy+erry,group=set,color=set),
width=0.01,alpha=0.4)+
#  geom_line(data=gdata,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
#  geom_line(data=gdata2,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
scale_colour_manual(name="",values=c("gray20","#7f0000","#7f0000","gray20","gray20",
"gray20","gray20"))+
scale_shape_manual(values=c(0,19,8,10,4,17,3),name="")+
coord_cartesian(xlim=c(5e-3,0.6),ylim=c(0.5,19)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-Factor (MeV b)") +
# scale_x_log10()  +
#  annotation_logticks(sides = "b") +
# annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
dev.off()
pdf("plot/He3dp_syst_l.pdf",height = 7,width = 10)
ggplot(gobs,aes(x=obsx,y=obsy))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# red
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#fdd0a2"),show.legend=FALSE)+
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdae6b"),show.legend=FALSE) +
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#d94801"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("gray95"),show.legend=FALSE)+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("gray75"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("gray55"),show.legend=FALSE) +
#  Bare
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#
#
geom_point(data=gobs,aes(x=obsx,y=obsy,group=set,color=set,shape=set),size=2.75,alpha=0.75)+
geom_errorbar(show.legend=FALSE,data=gobs,aes(x=obsx,y=obsy,ymin=obsy-erry,ymax=obsy+erry,group=set,color=set),
width=0.01,alpha=0.4)+
#  geom_line(data=gdata,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
#  geom_line(data=gdata2,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
scale_colour_manual(name="",values=c("gray20","#7f0000","#7f0000","gray20","gray20",
"gray20","gray20"))+
scale_shape_manual(values=c(0,19,8,10,4,17,3),name="")+
coord_cartesian(xlim=c(5e-3,0.6),ylim=c(0.5,19)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-Factor (MeV b)") +
# scale_x_log10()  +
#  annotation_logticks(sides = "b") +
# annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
dev.off()
jagsresults(x = Normfit , params = c("e1", "ex","gin", "gout","ue","tau","ri","rf"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
jagsresults(x = Normfit , params = c("e1_2","gin_2", "gout_2","tau_2","ri_2","rf_2"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
jagsresults(x = Normfit , params = c("e1_2","gin_2", "gout_2","ue","tau_2","ri_2","rf_2"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
Delta_y <- jagsresults(x=Normfit , params=c('DeltaM'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata02 <- data.frame(x =xx, mean = Delta_y[,"mean"],lwr1=Delta_y[,"25%"],lwr2=Delta_y[,"2.5%"],
lwr3=Delta_y[,"0.5%"],upr1=Delta_y[,"75%"],
upr2=Delta_y[,"97.5%"],upr3=Delta_y[,"99.5%"])
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# Delta  Bare
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.35),ylim=c(-0.075,0.075)) +
theme_bw() + xlab("Energy (MeV)") + ylab(expression(delta["S"])) +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
PR_gin <- runif( 15000, 0, 5)
MCMCtrace(Normfit, params = 'gin', priors = PR_gin, pdf = FALSE)
PR_out <- runif( 15000, 0, 5)
MCMCtrace(Normfit, params = 'gout', priors = PR_out, pdf = FALSE,type = "density")
PR_er <- runif( 15000, 0, 5)
MCMCplot(Normfit, params = 'e1', priors = PR_er, pdf = FALSE)
PR_er <- runif( 15000, 0, 5)
MCMCtrace(Normfit, params = 'e1', priors = PR_er, pdf = FALSE)
MCMCtrace(Normfit, params = 'gout', priors = PR_out, pdf = FALSE,type = "density")
PR_out <- runif( 15000, 0, 5)
MCMCtrace(Normfit, params = 'gout', priors = PR_out, pdf = FALSE,type = "density")
setwd("~/Documents/GitHub/JAGS_UNC/Scripts_R/He3dp/Real_data")
read.csv("NV_case_I.csv")
gg2data <- read.csv("NV_case_I.csv")
xtable(gg2data, type = "latex",display=c("g","g","g","g","g","f"),digits=4,caption= "Case I")
require(xtable)
gg2data <- read.csv("NV_case_I.csv")
xtable(gg2data, type = "latex",display=c("g","g","g","g","g","f"),digits=4,caption= "Case I")
xtable(gg2data,label ='tabtwo', type = "latex",display=c("g","g","g","g","g","f"),digits=4,caption= "Case I")
x.big <- xtable(gg2data,label ='tabtwo', type = "latex",display=c("g","g","g","g","g","f"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
x.big <- xtable(gg2data,label ='tabtwo', type = "latex",display=c("f","g","g","g","g","f"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
spaceCol =  rep("     ",30)
df1 = data.frame(gg2data[1:30,])
df2 = data.frame(gg2data[31:60,])
dfFull = data.frame(df1,spaceCol,df2)
x.big <- xtable(dfFull,label ='tabtwo', type = "latex",display=c("f","g","g","g","g","f"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
x.big <- xtable(dfFull,label ='tabtwo', type = "latex",display=rep(c("f","g","g","g","g","f"),2),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
dfFull = data.frame(df1,df2)
x.big <- xtable(dfFull,label ='tabtwo', type = "latex",display=rep(c("f","g","g","g","g","f"),2),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("f","g","g","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
dfFull = data.frame(df1,df2)
x.big <- xtable(dfFull, type = "latex",display=c("f","g","g","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
dfFull
x.big <- xtable(dfFull, type = "latex",display=c("f","g","g","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
x.big <- xtable(dfFull, type = "latex",display=c("f","g","g","g","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
print(x.big, tabular.environment ='longtable', floating = FALSE, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("f","g","g","g","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("f","e","e","e","g","g","g","g","g","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("f","e","e","e","g","f","e","e","e","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
dfFull
x.big <- xtable(dfFull, type = "latex",display=c("f","e","e","e","e","f","e","e","e","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("g","e","e","e","e","f","e","e","e","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("G","e","e","e","e","f","e","e","e","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
xtable(dfFull, type = "latex",display=c("g","e","e","e","e","f","e","e","e","g","g"),digits=4,caption= "Case I")
x.big <- xtable(dfFull, type = "latex",display=c("f","e","e","e","e","f","e","e","e","g","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("f","e","e","e","e","f","e","e","e","g","g"),digits=3,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=rep("e",10),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=rep("e",11),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=rep("f",11),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("e",rep("g",10)),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("e","E",rep("g",9)),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("e","g","E",rep("g",8)),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("e","g","E","E","E","g",
"g","E","E","E","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(gg2data, type = "latex",display=c("e","g","E","E","E","g"
),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
x.big <- xtable(dfFull, type = "latex",display=c("e","g","E","E","E","g",
"g","E","E","E","g"),digits=4,caption= "Case I")
print(x.big, include.rownames=FALSE)
