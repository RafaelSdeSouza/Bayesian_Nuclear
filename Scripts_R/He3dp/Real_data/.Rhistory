annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="",labels = c("Descouvemont", "Present","Case I")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(size = 0.75, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
#       panel.border = element_rect(size = 1.2))
pdf("rate_ratio_he3dp_I_II.pdf",height = 7,width = 10)
ggplot(jointI_II,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data)) +
#  geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.2) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE,alpha=0.65) +
geom_line(size=0.75) +
coord_cartesian(ylim=c(0.9,1.1),xlim=c(0.00125,1)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#969696","#e41a1c"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="",labels = c("Descouvemont", "Present","Case I")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(size = 0.75, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
#       panel.border = element_rect(size = 1.2))
dev.off()
plot_normfactors(Normfit)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d9d9d9","#969696","#525252",
"#969696","#d9d9d9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
plot_normfactors(Normfit)
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#d9d9B3","#9696B3","#5252B3",
"#9696B3","#d9d9B3"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
plot_normfactors(Normfit)
barplot(1:12, col = gray.colors(12))
barplot(1:12, col = gray.colors(3))
3
barplot(1:3, col = gray.colors(3))
barplot(1:3, col = gray.colors(3),alpha=0.75)
barplot(1:3, col = gray.colors(3,alpha=0.75))
barplot(1:3, col = gray.colors(3,alpha=0.75))
barplot(1:3, col = gray.colors(3,alpha=0.75))
barplot(1:3, col = gray.colors(3,alpha=0.5))
barplot(1:3, col = gray.colors(12,alpha=0.5))
gray.colors(12,alpha=0.5)
barplot(1:12, col = gray.colors(12,alpha=0.5))
barplot(1:3, col = gray.colors(start = 0.1, end = 0.7,3,alpha=0.5))
barplot(1:3, col = gray.colors(start = 0.1, end = 0.7,3,alpha=0.75))
gray.colors(start = 0.1, end = 0.7,3,alpha=0.75)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#B3B3B3BF", "#191919BF","#838383BF",
"#838383BF","#B3B3B3BF"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
plot_normfactors(Normfit)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#B3B3B3BF", "#838383BF","#191919BF",
"#838383BF","#B3B3B3BF"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
plot_normfactors(Normfit)
gray.colors(start = 0.1, end = 0.7,10,alpha=0.75)
barplot(1:10, col = gray.colors(start = 0.1, end = 0.7,10,alpha=0.75))
barplot(1:10, col = gray.colors(start = 0.1, end = 0.7,10,alpha=0.85))
gray.colors(start = 0.1, end = 0.7,10,alpha=0.85)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#7C7C7CD9", "#5C5C5CD9", "#191919D9",
"#5C5C5CD9","#7C7C7CD9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A0A0A0D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A0A0A0D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, color="red",fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.5,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A0A0A0D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A0A0A0D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.5, color ="red2",
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A0A0A0D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A0A0A0D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.5,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A0A0A0D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A0A0A0D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
gray.colors(start = 0.1, end = 0.7,10,alpha=0.85)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.5,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A9A9A9D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A9A9A9D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ",xi[j])))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
Delta_y <- jagsresults(x=Normfit , params=c('DeltaM'),probs=c(0.025, 0.16, 0.5, 0.84, 0.975))
gdata02 <- data.frame(x =xx, mean = Delta_y[,"mean"],lwr1=Delta_y[,"16%"],lwr2=Delta_y[,"2.5%"],
upr1=Delta_y[,"84%"],
upr2=Delta_y[,"97.5%"])
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.3) +
# Delta  Bare
# geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.65, fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),alpha=0.85,fill=c("#984ea3"),show.legend=FALSE) +
geom_line(linetype="dashed")+
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.325),ylim=c(0.9,1.055)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-factor ratio") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.25, "cm"), long = unit(0.3, "cm"),
sides = "b",size = 0.45) +
#  annotation_logticks(base=2.875,
#  short = unit(0.2, "cm"), mid = unit(0.25, "cm"), long = unit(0.3, "cm"),sides = "l",size = 0.45) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.text  = element_text(size=18),
axis.ticks = element_line(size = 0.45),
#        axis.line = element_line(size = 0.45, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
pdf("plot/Delta_models.pdf",height = 0.75*7,width = 0.75*10)
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.3) +
# Delta  Bare
# geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL), alpha=0.65, fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),alpha=0.85,fill=c("#984ea3"),show.legend=FALSE) +
geom_line(linetype="dashed")+
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.325),ylim=c(0.9,1.055)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-factor ratio") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.25, "cm"), long = unit(0.3, "cm"),
sides = "b",size = 0.45) +
#  annotation_logticks(base=2.875,
#  short = unit(0.2, "cm"), mid = unit(0.25, "cm"), long = unit(0.3, "cm"),sides = "l",size = 0.45) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.text  = element_text(size=18),
axis.ticks = element_line(size = 0.45),
#        axis.line = element_line(size = 0.45, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.5,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#A9A9A9D9", "#6E6E6ED9", "#191919D9",
"#6E6E6ED9","#A9A9A9D9"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab(expression(paste("Normalization factors ")))
return(gg)
}
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
