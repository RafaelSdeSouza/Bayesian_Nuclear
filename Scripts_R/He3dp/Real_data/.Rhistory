ggplot(data = data, mapping = mapping) +
stat_density_2d(aes(fill =..level..,alpha =..level..),n=500,
geom="polygon",...) +
#   scale_alpha_continuous(range=0.4,1) +
#    stat_ellipse(type = "norm",level = 0.95,geom = "polygon",fill="#feb24c",...) +
#    stat_ellipse(type = "norm",level = 0.68,geom = "polygon",fill="#f03b20",...) +
#    geom_point() +
#   stat_ellipse(type = "t",level = 0.997,alpha=0.95,color="#dfc27d",...) +
stat_ellipse(type = "t",level = 0.95,color="black",alpha=0.75,...) +
stat_ellipse(type = "t",level = 0.68,color="black",alpha=0.75,...) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 4)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4)) +
scale_fill_viridis() +
scale_alpha(range=c(0.2,1)) +
#    scale_fill_gradient(high=high,low=low) +
theme_bw() +
theme( text = element_text(size=60),axis.text = element_text(size=9.5),
axis.text.x = element_text(size=8, angle=30),
axis.text.y = element_text(size=8),
strip.text.x = element_text(colour = 'red',size = 20),
strip.text.y = element_text(colour = 'red',size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
}
ggs_pairs(s,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="both",
showStrips=TRUE
)
}
Sp <- ggs(as.mcmc(Normfit)[,c("Er", "gd2", "gp2","ue_ev[1]","ue_ev[2]","S_0")])
Sp0 <- Sp %>% as_tibble()
Sp0$Parameter <- ordered(Sp0$Parameter, levels = c("Er", "gd2", "gp2","ue_ev[1]","ue_ev[2]","S_0"))
levels(Sp0$Parameter) <- as.factor(c("E[0]~(MeV)","gamma[d]^2~(MeV)", "gamma[p]^2~(MeV)","U[e1]~(eV)", "U[e2]~(eV)","S[b](0)~(MeV~b)"))
#
pair_wise_plot(Sp0)
require(viridis)
pair_wise_plot <- function(s){
my_hist <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
stat_density_ridges(aes(y=0,fill=factor(..quantile..),alpha=factor(..quantile..)),geom = "density_ridges_gradient", calc_ecdf = TRUE,
quantiles = c(0.025, 0.16,  0.84, 0.975)) +
#   stat_density_ridges(geom = "density_ridges_gradient",aes(y=0, color="red",fill = 0.5-abs(0.5 - ..ecdf..),
#                       alpha=factor(..quantile..)),
#                       calc_ecdf = TRUE, quantile_lines = TRUE,
#                       quantiles = c(0.025, 0.25,  0.75, 0.975)) +
#    scale_fill_viridis() +
scale_fill_manual(name = "Probability", values = c("#440154BF",  "#21908CBF","#FDE725BF",
"#21908CBF","#440154BF")) +
#    scale_fill_viridis(discrete=TRUE)+
#     geom_histogram(bins = 10,fill="#bf812d",colour="#1F3552",...) +
#    geom_density(adjust = 1.5,fill="#bf812d",colour="#1F3552",...) +
theme_void() + theme( panel.grid.minor=element_blank(),
panel.grid.major = element_blank())
}
my_bin <- function(data, mapping, ..., low = "#74dbef", high = "#0074e4") {
# get the x and y data to use the other code
#   data2 <- probs_CI(data=data)
ggplot(data = data, mapping = mapping) +
stat_density_2d(aes(fill =..level..,alpha =..level..),n=500,
geom="polygon",...) +
#   scale_alpha_continuous(range=0.4,1) +
#    stat_ellipse(type = "norm",level = 0.95,geom = "polygon",fill="#feb24c",...) +
#    stat_ellipse(type = "norm",level = 0.68,geom = "polygon",fill="#f03b20",...) +
#    geom_point() +
#   stat_ellipse(type = "t",level = 0.997,alpha=0.95,color="#dfc27d",...) +
stat_ellipse(type = "t",level = 0.95,color="black",linetype="dashed",alpha=0.5,...) +
stat_ellipse(type = "t",level = 0.68,color="black",linetype="dashed",alpha=0.5,...) +
scale_x_continuous(breaks = scales::pretty_breaks(n = 4)) +
scale_y_continuous(breaks = scales::pretty_breaks(n = 4)) +
scale_fill_viridis() +
scale_alpha(range=c(0.2,1)) +
#    scale_fill_gradient(high=high,low=low) +
theme_bw() +
theme( text = element_text(size=60),axis.text = element_text(size=9.5),
axis.text.x = element_text(size=8, angle=30),
axis.text.y = element_text(size=8),
strip.text.x = element_text(colour = 'red',size = 20),
strip.text.y = element_text(colour = 'red',size = 20),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
}
ggs_pairs(s,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="both",
showStrips=TRUE
)
}
pair_wise_plot(Sp0)
pdf("plot/He3dp_corr.pdf",height = 7,width = 7)
pair_wise_plot(Sp0)
dev.off()
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#440154BF",  "#21908CBF","#FDE725BF",
"#21908CBF","#440154BF"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab("Normalization factors")
return(gg)
}
plot_normfactors(Normfit)
pdf("plot/He3dp_scale_syst.pdf",height = 5,width = 4.5)
plot_normfactors(Normfit)
dev.off()
jagsresults(x = Normfit, params = c("scale"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#440154BF",  "#21908CBF","#FDE725BF",
"#21908CBF","#440154BF"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab("Normalization factors")
return(gg)
}
plot_normfactors(Normfit)
plot_normfactors <- function(Normfit){
Sa <- ggs(as.mcmc(Normfit),family="scale")
Sa$Parameter <- revalue(Sa$Parameter,
c("scale[1]" = "Ali01a","scale[2]" = "Ali01b","scale[3]" = "Cos00",
"scale[4]" = "Gei99","scale[5]" = "Kra87","scale[6]" = "Mol80",
"scale[7]" = "Zhi77"))
jagsresults(x = Normfit, params = c("scale"),probs = c(0.0015,0.025, 0.16, 0.5, 0.84, 0.975,0.9985))
require(ggridges)
gg <- ggplot(Sa, aes(x = value, y = Parameter, fill=factor(..quantile..),alpha=factor(..quantile..))) +
#   geom_density_ridges(scale = 2.5,panel_scaling=F) +
stat_density_ridges(geom = "density_ridges_gradient", calc_ecdf = TRUE, alpha=0.3,
quantile_lines = TRUE,quantiles = c(0.025, 0.16,  0.84, 0.975)) +
theme_economist_white() +
scale_fill_manual(name = "Probability", values = c("#440154BF",  "#21908CBF","#FDE725BF",
"#21908CBF","#440154BF"))+
geom_vline(xintercept = 1,linetype="dashed",color="red") +
#  scale_fill_manual(values=c(rep("gray75",7))) +
# geom_point(size=1,color="red") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="black", size=15),
axis.text  = element_text(size=10),
strip.background = element_rect("white")) +
ylab("") +
#  xlab("Highest Probability Interval")
xlab("Normalization factors")
return(gg)
}
plot_normfactors(Normfit)
require(xtable)
NA_I_latex <- read.csv("NA_I.csv")
NA_II_latex <- read.csv("NA_II.csv")
xl <- NA_II_latex
df1 = data.frame(xl[1:30,c(1,3,2,4,5)])
df2 = data.frame(xl[31:60,c(1,3,2,4,5)])
dfFull = data.frame(df1,df2)
x.big <- xtable(dfFull[,c(1,2,5,6,7,10)], type = "latex",display=c("e","g","E","E","E","g",
"g","E","E","E","g"),digits=4,caption= "Case I")
short<- xtable(dfFull[,c(1,2,5,6,7,10)], type = "latex",display=c("e","g","E","g","g",
"E","g"),digits=4,caption= "Case I")
print(short, include.rownames=FALSE)
require(nuclear)
Tgrid = c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.500,1.750,2.000,2.500,3.000,3.500,4.000,5.000,
6.000,7.000,8.000,9.000,10.000)
NAI <- table_reaction_He3dp(Normfit, vars=c("E0","Er","gd2", "gp2", "ad","ap"),N=800,T9=Tgrid )
NAII <- table_reaction_He3dp(Normfit, vars=c("E0_b","Er_b","gd2_b", "gp2_b", "ad_b","ap_b"),N=800,T9=Tgrid )
Norm <- NAII$mean
NAI_new <- NAI  %>%  mutate(data = "present") %>%
select(c("T9","mean","lower","upper")) %>%
set_colnames(c("T9","Adopted","Lower","Upper")) %>%
mutate(Adopted = Adopted/Norm) %>%
mutate(Lower = Lower/Norm) %>%
mutate(Upper = Upper/Norm)  %>%
mutate(data="presentI")
NAII_new <- NAII  %>%  mutate(data = "present") %>%
select(c("T9","mean","lower","upper")) %>%
set_colnames(c("T9","Adopted","Lower","Upper")) %>%
mutate(Adopted = Adopted/Norm) %>%
mutate(Lower = Lower/Norm) %>%
mutate(Upper = Upper/Norm)  %>%
mutate(data="presentII")
old <- read.csv("tabula-tab_he3dp.csv",header = TRUE) %>%
select(c("T9","Adopted","Lower","Upper"))  %>%
mutate(data="previous") %>%
mutate(Adopted = Adopted/Norm) %>%
mutate(Lower = Lower/Norm) %>%
mutate(Upper = Upper/Norm)
joint <- rbind(old,NAI_new,NAII_new)
joint$data <- as.factor(joint$data)
#joint$data <- factor(joint$data, levels = c("previous","presentII","presentI"))
jointf <- filter(joint, data %in% c("previous","presentII"))
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.1),xlim=c(0.00125,1)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.1),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.15),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.25),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.5),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,5),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,2),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
jointI_II <- filter(joint, data %in% c("presentI","presentII"))
jointI_II$data <- factor(jointI_II$data, levels = c("presentII","presentI"))
ggplot(jointI_II,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.2) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.1),xlim=c(0.00125,1)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#FFA500"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="",labels = c("Descouvemont", "Present","Case I")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(size = 0.75, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
ggplot(jointI_II,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.2) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,1.1),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#FFA500"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="",labels = c("Descouvemont", "Present","Case I")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(size = 0.75, linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"))
jointf <- filter(joint, data %in% c("previous","presentI"))
ggplot(jointf,aes(x=T9,y=Adopted, group=data,fill=data,linetype=data,alpha=0.5)) +
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="#F0F8FF",alpha=0.4) +
geom_ribbon(aes(x=T9,ymin=Lower, ymax=Upper),show.legend=FALSE) +
geom_line() +
coord_cartesian(ylim=c(0.9,2),xlim=c(0.00125,10)) +
theme_bw() + xlab("Temperature (GK)") + ylab("Reaction rate ratio") +
scale_fill_manual(values=c("#819987","#6600CC"),name="") +
scale_x_log10(breaks = c(0.001,0.01,0.1,1),labels=c("0.001","0.01","0.1","1"))  +
annotation_logticks(short = unit(0.2, "cm"), mid = unit(0.3, "cm"), long = unit(0.4, "cm"),
sides = "b") +
#  annotation_logticks(base=2.875,sides = "l") +
scale_linetype_manual(guide=F,values=c("dashed","solid"),name="") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
#       plot.background = element_rect(size = 3, linetype='dashed',colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size = 22),
axis.ticks = element_line(size = 0.75),
#        axis.line = element_line(linetype = "solid"),
axis.text.y = element_text(size = 20, margin = unit(c(t = 0, r = 5, b = 0, l = 0), "mm")),
axis.text.x = element_text(size = 20, margin = unit(c(t = 5, r = 0, b = 0, l = 0), "mm")),
axis.ticks.length = unit(-3, "mm"),
panel.border = element_rect(size = 0.5)
)
