#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("#cd4f39","#7ebca1","#4e2f19"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(11,1,2),color="gray10") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("#cd4f39","#7ebca1","#4e2f19"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(8,17,11),color="gray10") +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray10","gray10","gray10"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray90","gray90","gray90"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray70","gray70","gray70"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=3.75,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 5,width = 4)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
setwd("~/Documents/GitHub/JAGS_UNC/Scripts_R/He3dp/Synthetic")
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 5,width = 4)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 7,width = 6)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
out
jagsresults(x=out, params=c("e1", "gin", "gout","tau","scale"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
a
ggs_pairs(S)
S <- ggs(as.mcmc(out)[,c("e1", "gin", "gout","tau")])
ggs_pairs(S)
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower=list(continuous = wrap("points", alpha = 0.2, shape = 1)))
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL)
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL)
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL) + theme_bw()
ggplot(data=S,aes(x= Iteration,y=value,group=Parameter,color=factor(Chain))) +
geom_line(alpha=0.5,size=0.25) +
theme_wsj() +
scale_color_tableau()+
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
ylab("Parameter value") + xlab("Iteration")+
ggtitle(expression(paste(NULL^"3","He(d,p)",NULL^"4","He")))
my_bin <- function(data, mapping, ..., low = "#3698BF", high = "#D97C2B") {
ggplot(data = data, mapping = mapping) +
geom_bin2d(...) +
scale_fill_gradient(low = low, high = high,trans = log10_trans()) +
theme_bw() +
scale_y_continuous(round(seq(min(data), max(data), length.out = 3),1))
}
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
my_bin <- function(data, mapping, ..., low = "#3698BF", high = "#D97C2B") {
ggplot(data = data, mapping = mapping) +
geom_bin2d(...) +
scale_fill_gradient(low = low, high = high) +
theme_bw() +
scale_y_continuous(round(seq(min(data), max(data), length.out = 3),1))
}
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
S
ggs_pairs(S[,c(2,3)],diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
S[,c(2,3)]
ggs_pairs(S[,c(2,3)],diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
my_bin <- function(data, mapping, ..., low = "#3698BF", high = "#D97C2B") {
ggplot(data = data, mapping = mapping) +
geom_bin2d(...) +
scale_fill_gradient(low = low, high = high) +
theme_bw()
}
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_void()
ggs_pairs(S,diag=list(continuous="barDiag"),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
my_hist <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_histogram(bins = 10,fill="#4271AE",colour="#1F3552",...) +
theme_void() + theme( panel.grid.minor=element_blank(),
panel.grid.major=element_blank())
}
my_bin <- function(data, mapping, ..., low = "#3698BF", high = "#D97C2B") {
ggplot(data = data, mapping = mapping) +
geom_bin2d(...) +
scale_fill_gradient(low = low, high = high) +
theme_bw()
}
ggs_pairs(S,diag=list(continuous=my_hist),
upper=NULL,
lower = list(continuous = my_bin)) + theme_bw()
my_hist <- function(data, mapping, ...) {
ggplot(data = data, mapping = mapping) +
geom_histogram(bins = 10,fill="#4271AE",colour="#1F3552",...) +
theme_void() + theme( panel.grid.minor=element_blank(),
panel.grid.major=element_blank())
}
my_bin <- function(data, mapping, ..., low = "#3698BF", high = "#D97C2B") {
ggplot(data = data, mapping = mapping) +
geom_bin2d(...) +
scale_fill_gradient(low = low, high = high) +
theme_bw()
}
ggs_pairs(S,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin))
ggs_pairs(S,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),switch="x")
ggs_pairs(S,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),axisLabels="internal")
ggs_pairs(S,diag=list(continuous = my_hist),
upper=list(continuous = my_hist),
lower = list(continuous = my_bin),axisLabels="internal")
ggs_pairs(S,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),switch="y")
library("GGally", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
Sp <- ggs(as.mcmc(out)[,c("e1", "gin", "gout")])
ggs_pairs(Sp,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),switch="y",
columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed")
ggs_pairs(Sp,diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed")
ggs_pairs(Sp,columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
Sp <- ggs(as.mcmc(out)[,c("e1", "gin", "gout")])
ggs_pairs(Sp,columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
gg_pairs(Sp,columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
ggspairs(Sp,columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
ggpairs(Sp,columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
ggpairs(Sp[,3:4],columnLabels = c("E[r]","Gamma[d]", "Gamma[p]"),
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
Sp
Sp[,3:4]
Sp
Sp
levels(Sp$Parameter)
levels(Sp$Parameter) <- c("E[r]","Gamma[d]", "Gamma[p]")
Sp$Parameter
ggpairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
Sp
Sp <- ggs(as.mcmc(out)[,c("e1", "gin", "gout")])
levels(Sp$Parameter) <- as.factor(c("E[r]","Gamma[d]", "Gamma[p]"))
ggpairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
Sp <- ggs(as.mcmc(out)[,c("e1", "gin", "gout")])
#levels(Sp$Parameter) <- as.factor(c("E[r]","Gamma[d]", "Gamma[p]"))
ggpairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
ggs_pairs(Sp,
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
levels(Sp$Parameter) <- as.factor(c("E[r]","Gamma[d]", "Gamma[p]"))
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper=NULL,
lower = list(continuous = my_bin),
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="y"
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="x"
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="yx"
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="y",
switch="x",
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="both"
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="both",
showStrips=FALSE
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="both",
showStrips=FALSE
)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="y",
showStrips=FALSE
)
pdf("plot/He3dp_synthetic_corr_syst.pdf",height = 6,width = 6)
ggs_pairs(Sp,
labeller = "label_parsed",
diag=list(continuous = my_hist),
upper = "blank",
lower = list(continuous = my_bin),
switch="y",
showStrips=FALSE
)
dev.off()
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 6,width = 6)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 6,width = 4.5)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 6,width = 6)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
pdf("plot/He3dp_synthetic_scale_syst.pdf",height = 7,width = 6)
ggs_caterpillar(Sa) + aes(color=Parameter) +
theme_wsj() +
scale_color_manual(name="",values=c("gray60","gray60","gray60"))+
geom_point(data=vlinea.dat ,aes(y=Parameter, x = vl),size=4,shape=c(8,17,11),color=c("#cd4f39","#7ebca1","#4e2f19")) +
theme(legend.position = "none",
legend.background = element_rect(colour = "white", fill = "white"),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=15),
axis.text  = element_text(size=12),
strip.text = element_text(size=15),
strip.background = element_rect("white")) +
#  facet_wrap(~Parameter,scales="free",ncol=2,nrow=2,labeller=label_parsed) +
#  ylab("Parameter value") +
xlab("Highest Probability Interval")
dev.off()
