}
for (k in 1:Nre){
scale[k] ~ dlnorm(log(1.0),1/log(1+pow(syst[k],2)))
}
for (z in 1:Nik){
ue[z] ~ dnorm(0,1e3)T(0,)
}
# PRIORS 1
tau ~  dunif(0.01,5)
e1 ~  dunif(0,5)
ex <-  e1
gin ~  dunif(0,5)
gout ~ dunif(0,5)
rf ~  dnorm(5, pow(0.1,-2))T(0,)
ri ~  dnorm(5, pow(0.1,-2))T(0,)
tau_2 ~ dunif(0.01,5)
e1_2  ~  dunif(0,5)
ex_2  ~   dunif(0,5)
gin_2 ~  dunif(0,20)
gout_2 ~ dunif(0,20)
rf_2 ~  dunif(0,50)
ri_2 ~  dunif(0,50)
}"
######################################################################
# n.adapt:  number of iterations in the chain for adaptation (n.adapt)
#           [JAGS will use to choose the sampler and to assure optimum
#           mixing of the MCMC chain; will be discarded]
# n.udpate: number of iterations for burnin; these will be discarded to
#           allow the chain to converge before iterations are stored
# n.iter:   number of iterations to store in the final chain as samples
#           from the posterior distribution
# n.chains: number of mcmc chains
# n.thin:   store every n.thin element [=1 keeps all samples]
inits <- function () { list(e1 = runif(1,0.35,2),gout=runif(1,0.01,0.5),gin=runif(1,0.5,3)) }
# "f": is the model specification from above;
# data = list(...): define all data elements that are referenced in the
# JAGS model with R2Jags;
Normfit <- jags(data = model.data,
inits = inits,
parameters.to.save  = c("e1","gin", "gout","ue","tau", "ri","rf","RSS","mux0","mux1","mux2","scale","DeltaM",
"e1_2","gin_2", "gout_2","tau_2","ri_2","rf_2" ),
model.file  = textConnection(Model),
n.thin = 1,
n.chains = 4,
n.burnin = 20000,
n.iter = 40000)
inits <- function () { list(e1 = runif(1,0.3,2),gout=runif(1,0.01,1),gin=runif(1,0.5,5)) }
# "f": is the model specification from above;
# data = list(...): define all data elements that are referenced in the
# JAGS model with R2Jags;
Normfit <- jags(data = model.data,
inits = inits,
parameters.to.save  = c("e1","gin", "gout","ue","tau", "ri","rf","RSS","mux0","mux1","mux2","scale","DeltaM",
"e1_2","gin_2", "gout_2","tau_2","ri_2","rf_2" ),
model.file  = textConnection(Model),
n.thin = 1,
n.chains = 3,
n.burnin = 10000,
n.iter = 25000)
jagsresults(x = Normfit , params = c("e1", "ex","gin", "gout","ue","tau","ri","rf"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
jagsresults(x = Normfit , params = c("e1_2","gin_2", "gout_2","tau_2","ri_2","rf_2"),probs = c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
y <- jagsresults(x=Normfit , params=c('mux1'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
x <- xx
gdata <- data.frame(x =xx, mean = y[,"mean"],lwr1=y[,"25%"],lwr2=y[,"2.5%"],lwr3=y[,"0.5%"],upr1=y[,"75%"],
upr2=y[,"97.5%"],upr3=y[,"99.5%"])
gobs <- data.frame(obsx,obsy,erry,set,lab)
gobs$set <- as.factor(gobs$set)
y2 <- jagsresults(x=Normfit , params=c('mux2'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata2 <- data.frame(x =xx, mean = y2[,"mean"],lwr1=y2[,"25%"],lwr2=y2[,"2.5%"],lwr3=y2[,"0.5%"],upr1=y2[,"75%"],
upr2=y2[,"97.5%"],upr3=y2[,"99.5%"])
y0 <- jagsresults(x=Normfit , params=c('mux0'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata0 <- data.frame(x =xx, mean = y0[,"mean"],lwr1=y0[,"25%"],lwr2=y0[,"2.5%"],lwr3=y0[,"0.5%"],upr1=y0[,"75%"],
upr2=y0[,"97.5%"],upr3=y0[,"99.5%"])
ggplot(gobs,aes(x=obsx,y=obsy))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# red
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#fdd0a2"),show.legend=FALSE)+
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#fdae6b"),show.legend=FALSE) +
geom_ribbon(data=gdata2,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#d94801"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("gray95"),show.legend=FALSE)+
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("gray75"),show.legend=FALSE) +
geom_ribbon(data=gdata,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("gray55"),show.legend=FALSE) +
#  Bare
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#
#
geom_point(data=gobs,aes(x=obsx,y=obsy,group=set,color=set,shape=set),size=2.75,alpha=0.75)+
geom_errorbar(show.legend=FALSE,data=gobs,aes(x=obsx,y=obsy,ymin=obsy-erry,ymax=obsy+erry,group=set,color=set),
width=0.01,alpha=0.4)+
#  geom_line(data=gdata,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
#  geom_line(data=gdata2,aes(x=xx,y=mean),linetype="dashed",size=0.75,show.legend=FALSE)+
scale_colour_manual(name="",values=c("gray20","#7f0000","#7f0000","gray20","gray20",
"gray20","gray20"))+
scale_shape_manual(values=c(0,19,8,10,4,17,3),name="")+
coord_cartesian(xlim=c(5e-3,0.6),ylim=c(0.5,19)) +
theme_bw() + xlab("Energy (MeV)") + ylab("S-Factor (MeV b)") +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
Delta_y <- jagsresults(x=Normfit , params=c('DeltaM'),probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995))
gdata02 <- data.frame(x =xx, mean = Delta_y[,"mean"],lwr1=Delta_y[,"25%"],lwr2=Delta_y[,"2.5%"],
lwr3=Delta_y[,"0.5%"],upr1=Delta_y[,"75%"],
upr2=Delta_y[,"97.5%"],upr3=Delta_y[,"99.5%"])
ggplot(gdata02,aes(x=x,y=mean))+
geom_rect(aes(xmin=0.045, xmax=0.356, ymin=-1, ymax=22), fill="gray90",alpha=0.4) +
# Delta  Bare
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
geom_ribbon(data=gdata02,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),show.legend=FALSE) +
#  Bare
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr3, ymax=upr3,y= NULL),fill=c("#dadaeb"),show.legend=FALSE)+
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr2, ymax=upr2,y=NULL),  fill = c("#9e9ac8"),show.legend=FALSE) +
#  geom_ribbon(data=gdata0,aes(x=xx,ymin=lwr1, ymax=upr1,y=NULL),fill=c("#984ea3"),alpha=0.5,show.legend=FALSE) +
#
#
coord_cartesian(xlim=c(5e-3,0.35),ylim=c(-0.075,0.075)) +
theme_bw() + xlab("Energy (MeV)") + ylab(expression(delta["S"])) +
scale_x_log10()  +
annotation_logticks(sides = "b") +
annotation_logticks(base=2.875,sides = "l") +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position = c(0.925,0.7),
legend.background = element_rect(colour = "white", fill = "white"),
legend.text = element_text(size=14,colour = set),
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "white"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(size=18.5),
axis.text  = element_text(size=13),
axis.ticks = element_line(size = 0.75),
axis.line = element_line(size = 0.5, linetype = "solid"))
Nsamp <- 500
mcdat <- as.data.frame(do.call(rbind, as.mcmc(Normfit)[,c("e1","gin","gout")]))
index <- sample(1:nrow(mcdat),size=Nsamp,replace=FALSE)
mcdat <- mcdat[index,]
Tgrid <- exp(seq(log(1e-3),log(10),length.out =  100))
Tgrid
10^(seq(log(1e-3,10),log(10,10),length.out =  60))
Tgrid <- c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.500,1.750,2.000,2.500,3.000,3.500,4.000,5.000,
6.000,7.000,8.000,9.000,10.000)
Tgrid
dim(Tgrid)
lenght(Tgrid)
length(Tgrid)
Tgrid <- c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.500,1.750,2.000,2.500,3.000,3.500,4.000,5.000,
6.000,7.000,8.000,9.000,10.000)
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3])
dd <- data.frame(y)
gdat[[i]] <- dd
}
gg <-  as.data.frame(gdat)
gg$x <- Tgrid
gg2 <- apply(gg, 1, quantile, probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995), na.rm=TRUE)
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lwr1=gg2["25%",],
lwr2 = gg2["2.5%",],lwr3=gg2["0.5%",],upr1=gg2["75%",],
upr2=gg2["97.5%",],upr3=gg2["99.5%",])
ggplot(gg2data,aes(x=x,y=mean))+
theme_bw()  +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr3, ymax=upr3,y=NULL), fill=c("#ffeda0"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr2, ymax=upr2,y=NULL), fill=c("#feb24c"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr1, ymax=upr1,y=NULL), fill=c("#f03b20"),show.legend=FALSE) +
xlab("Temperature (GK)") + ylab(expression(N[A]~symbol("\341")*sigma*nu*symbol("\361"))) +
scale_y_continuous(breaks=c(0,5e7,1e8,1.5e8),labels=c(0,expression(5%*%10^7),
expression(10^8),expression(1.5%*%10^8))) +
theme(legend.position = "none",
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "gray95"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=17.5),
axis.text  = element_text(size=13),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
mcdat <- as.data.frame(do.call(rbind, as.mcmc(Normfit)[,c("e1","gin","gout","r_i","r_f")]))
Normfit
mcdat <- as.data.frame(do.call(rbind, as.mcmc(Normfit)[,c("e1","gin","gout","ri","rf")]))
ggplot(gg2data,aes(x=x,y=mean))+
theme_bw()  +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr3, ymax=upr3,y=NULL), fill=c("#ffeda0"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr2, ymax=upr2,y=NULL), fill=c("#feb24c"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr1, ymax=upr1,y=NULL), fill=c("#f03b20"),show.legend=FALSE) +
xlab("Temperature (GK)") + ylab(expression(N[A]~symbol("\341")*sigma*nu*symbol("\361"))) +
scale_y_log10(breaks=c(0,5e7,1e8,1.5e8),labels=c(0,expression(5%*%10^7),
expression(10^8),expression(1.5%*%10^8))) +
theme(legend.position = "none",
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "gray95"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=17.5),
axis.text  = element_text(size=13),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(gg2data,aes(x=x,y=mean))+
theme_bw()  +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr3, ymax=upr3,y=NULL), fill=c("#ffeda0"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr2, ymax=upr2,y=NULL), fill=c("#feb24c"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr1, ymax=upr1,y=NULL), fill=c("#f03b20"),show.legend=FALSE) +
xlab("Temperature (GK)") + ylab(expression(N[A]~symbol("\341")*sigma*nu*symbol("\361"))) +
#scale_y_continuous(breaks=c(0,5e7,1e8,1.5e8),labels=c(0,expression(5%*%10^7),
#                             expression(10^8),expression(1.5%*%10^8))) +
scale_y_log10()+
theme(legend.position = "none",
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "gray95"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=17.5),
axis.text  = element_text(size=13),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],mcdat[i,4],mcdat[i,5] )
dd <- data.frame(y)
gdat[[i]] <- dd
}
gg <-  as.data.frame(gdat)
gg$x <- Tgrid
gg2 <- apply(gg, 1, quantile, probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995), na.rm=TRUE)
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lwr1=gg2["25%",],
lwr2 = gg2["2.5%",],lwr3=gg2["0.5%",],upr1=gg2["75%",],
upr2=gg2["97.5%",],upr3=gg2["99.5%",])
ggplot(gg2data,aes(x=x,y=mean))+
theme_bw()  +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr3, ymax=upr3,y=NULL), fill=c("#ffeda0"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr2, ymax=upr2,y=NULL), fill=c("#feb24c"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr1, ymax=upr1,y=NULL), fill=c("#f03b20"),show.legend=FALSE) +
xlab("Temperature (GK)") + ylab(expression(N[A]~symbol("\341")*sigma*nu*symbol("\361"))) +
#scale_y_continuous(breaks=c(0,5e7,1e8,1.5e8),labels=c(0,expression(5%*%10^7),
#                             expression(10^8),expression(1.5%*%10^8))) +
scale_y_log10()+
theme(legend.position = "none",
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "gray95"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=17.5),
axis.text  = element_text(size=13),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
gg2data
gg
gg2 <- apply(gg, 1, quantile, probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995), na.rm=TRUE)
gg2
gg2data
nuclear_rate3Hedp_5p <- function(ER, gi, gf, r_i, r_f, T9){
# Constants
M0 = 3.01493216; M1 = 2.01355332;		# masses (amu) of t and d
Z0 = 2; Z1 = 1 ;			# charges of t and d
#   DEFINITIONS
mue <- (M0*M1)/(M0 + M1)
dpieta <- function(E){0.98951013*Z0*Z1*sqrt(mue/E)}
#     ----------------------------------------------------
#     Integrand
#     ----------------------------------------------------
integrand <- function(E,T9) {exp(-dpieta(E))*sfactor3Hedp_5p(E,ER,gi,gf,r_i,r_f)*exp(-E/(0.086173324*T9))}
# CALCULATE Nuclear rate
Nasv <- function(Temp){(3.7318e10/Temp^{3/2})*sqrt(1/mue)*integrate(integrand, lower = 0, upper = Inf,
abs.tol = 0L,T9 = Temp)$value}
out <- Nasv(T9)
return(Nasv=out)
}
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],mcdat[i,4],mcdat[i,5] )
dd <- data.frame(y)
gdat[[i]] <- dd
}
gg <-  as.data.frame(gdat)
gg$x <- Tgrid
gg2 <- apply(gg, 1, quantile, probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995), na.rm=TRUE)
gg2
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lwr1=gg2["25%",],
lwr2 = gg2["2.5%",],lwr3=gg2["0.5%",],upr1=gg2["75%",],
upr2=gg2["97.5%",],upr3=gg2["99.5%",])
gg2data
ggplot(gg2data,aes(x=x,y=mean))+
theme_bw()  +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr3, ymax=upr3,y=NULL), fill=c("#ffeda0"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr2, ymax=upr2,y=NULL), fill=c("#feb24c"),show.legend=FALSE) +
geom_ribbon(data=gg2data,aes(x=Tgrid,ymin=lwr1, ymax=upr1,y=NULL), fill=c("#f03b20"),show.legend=FALSE) +
xlab("Temperature (GK)") + ylab(expression(N[A]~symbol("\341")*sigma*nu*symbol("\361"))) +
#scale_y_continuous(breaks=c(0,5e7,1e8,1.5e8),labels=c(0,expression(5%*%10^7),
#                             expression(10^8),expression(1.5%*%10^8))) +
scale_y_log10()+
theme(legend.position = "none",
plot.background = element_rect(colour = "white", fill = "white"),
panel.background = element_rect(colour = "white", fill = "gray95"),
legend.key = element_rect(colour = "white", fill = "white"),
axis.title = element_text(color="#666666", face="bold", size=17.5),
axis.text  = element_text(size=13),panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
84-16
gg2 <- apply(gg, 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
data.frame(x =Tgrid, mean = gg2["50%",],sigma = gg2["84%",]-gg2["16%",] )
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],sigma = (gg2["84%",]-gg2["50%",] + gg2["50%",]-gg2["16%",] )/2)
gg2data
log(2516641.251)
avog=6.02214129E23
pi=3.141592653589793E0
muc2=931.494061E0
c=299792458E2
factor1=dsqrt(8.0/(pi*mue*muc2))*c*avog*1.0E-24
factor1=sqrt(8.0/(pi*mue*muc2))*c*avog*1.0E-24
M0 = 3.01493216; M1 = 2.01355332;		# masses (amu) of t and d
Z0 = 2; Z1 = 1 ;			# charges of t and d
#   DEFINITIONS
mue <- (M0*M1)/(M0 + M1)
factor1=sqrt(8.0/(pi*mue*muc2))*c*avog*1.0E-24
factor1
require(nuclear)
require(ggplot2)
require(parallel)
Cdat <- read.table("numRates1.out",header=F)
Tgrid <- exp(seq(log(1e-3),log(10),length.out =  100))
ptm0 <- proc.time()
Nasv <- sapply(Tgrid ,nuclear_rate3Hedp,ER=0.48000449,gi=1.16116126,gf= 0.03976223)
proc.time() - ptm0
ptm <- proc.time()
pna <-  simplify2array(mclapply(Tgrid, nuclear_rate3Hedp,ER=0.48000449,gi=1.16116126,gf= 0.03976223, mc.preschedule = FALSE,
mc.set.seed = FALSE))
proc.time() - ptm
Rd <- data.frame(x=Tgrid ,y=Nasv)
setwd("~/Documents/GitHub/JAGS_UNC/Num_rates")
Cdat <- read.table("numRates1.out",header=F)
ggplot(Cdat,aes(x=V1,y=V2)) +
geom_point() +
geom_line(data=Rd,aes(x=x,y=y)) + xlab("Temperature") +
ylab("NA") + scale_y_log10() +
scale_x_log10()
Tgrid <- 0.001
sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],mcdat[i,4],mcdat[i,5] )
mcdat[i,1]
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],mcdat[i,4],mcdat[i,5] )
dd <- data.frame(y)
gdat[[i]] <- dd
}
gdat
pna
Nasv
mcdat_I
mcdat_I <- as.data.frame(do.call(rbind, as.mcmc(Normfit)[,c("e1","gin","gout","ri","rf")]))
index <- sample(1:nrow(mcdat_I ),size=Nsamp,replace=FALSE)
mcdat <- mcdat_I [index,]
mcdat
nuclear_rate3Hedp_5p(0.36,2.4,0.04,5,5)
nuclear_rate3Hedp_5p(0.001,0.36,2.4,0.04,5,5)
nuclear_rate3Hedp(0.001,0.36,2.4,0.04)
nuclear_rate3Hedp(0.001,0.48,2.4,0.04)
nuclear_rate3Hedp(0.001,0.48,1.16,0.04)
nuclear_rate3Hedp(0.001,0.48,1.16,0.039)
Tgrid <- exp(seq(log(1e-3),log(10),length.out =  100))
Tgrid
nuclear_rate3Hedp(0.001000000,0.48,1.16,0.039)
nuclear_rate3Hedp(0.001000000,0.48000449,1.16116126,0.03976223)
Nasv
Tgrid <- 0.001
sapply(Tgrid ,nuclear_rate3Hedp,ER=0.48000449,gi=1.16116126,gf= 0.03976223)
sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],ri=mcdat[i,4],rf=mcdat[i,5] )
sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],r_i=mcdat[i,4],r_f=mcdat[i,5] )
nuclear_rate3Hedp_5p <- function(ER, gi, gf, r_i, r_f, T9){
# Constants
M0 = 3.01493216; M1 = 2.01355332;		# masses (amu) of t and d
Z0 = 2; Z1 = 1 ;			# charges of t and d
#   DEFINITIONS
mue <- (M0*M1)/(M0 + M1)
dpieta <- function(E){0.98951013*Z0*Z1*sqrt(mue/E)}
#     ----------------------------------------------------
#     Integrand
#     ----------------------------------------------------
integrand <- function(E,T9) {exp(-dpieta(E))*sfactor3Hedp_5p(E,ER,gi,gf,r_i,r_f)*exp(-E/(0.086173324*T9))}
# CALCULATE Nuclear rate
Nasv <- function(Temp){(3.7318e10/Temp^{3/2})*sqrt(1/mue)*integrate(integrand, lower = 1e-5, upper = Inf,
abs.tol = 0L,T9 = Temp)$value}
out <- Nasv(T9)
return(Nasv=out)
}
sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],r_i=mcdat[i,4],r_f=mcdat[i,5] )
Tgrid <- c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.500,1.750,2.000,2.500,3.000,3.500,4.000,5.000,
6.000,7.000,8.000,9.000,10.000)
#Tgrid <- 10^(seq(log(1e-3,10),log(10,10),length.out =  60))
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat[i,1],gi = mcdat[i,2],gf = mcdat[i,3],r_i=mcdat[i,4],r_f=mcdat[i,5] )
dd <- data.frame(y)
gdat[[i]] <- dd
}
gg <-  as.data.frame(gdat)
gg$x <- Tgrid
#gg2 <- apply(gg, 1, quantile, probs=c(0.005,0.025, 0.25, 0.5, 0.75, 0.975,0.995), na.rm=TRUE)
gg2 <- apply(gg, 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],sigma = (gg2["84%",]-gg2["50%",] + gg2["50%",]-gg2["16%",] )/2)
gg2data
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],sigma = exp((gg2["84%",]-gg2["50%",] + gg2["50%",]-gg2["16%",] )/2))
gg2data
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],sigma = (gg2["84%",]-gg2["50%",] + gg2["50%",]-gg2["16%",] )/2)
gg2data
apply(gg, 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
apply(gg, 1, sd, na.rm=TRUE)
sln <- function(x){log(1+sd(x)/mean(x))}
sln <- function(x){sqrt(log(1+sd(x)/mean(x)))}
apply(gg, 1, sln, na.rm=TRUE)
apply(gg, 1, sln)
sln <- function(x){sqrt(log(1+var(x)/mean(x)^2))}
apply(gg, 1, sln)
exp(apply(gg, 1, sln))
gg
Nsamp <- 5000
mcdat_I <- as.data.frame(do.call(rbind, as.mcmc(Normfit)[,c("e1","gin","gout","ri","rf")]))
index <- sample(1:nrow(mcdat_I ),size=Nsamp,replace=FALSE)
mcdat <- mcdat_I [index,]
Tgrid <- c(0.001,0.002,0.003,0.004,0.005,0.006,0.007,0.008,0.009,0.010,0.011,0.012,
0.013,0.014,0.015,0.016,0.018,0.020,0.025,0.030,0.040,0.050,0.060,0.070,
0.080,0.090,0.100,0.110,0.120,0.130,0.140,0.150,0.160,0.180,0.200,0.250,0.300,
0.350,0.400,0.450,0.500,0.600,0.700,0.800,0.900,1.000,1.250,1.500,1.750,2.000,2.500,3.000,3.500,4.000,5.000,
6.000,7.000,8.000,9.000,10.000)
gdat <- list()
for(i in 1:Nsamp){
y <- sapply(Tgrid,nuclear_rate3Hedp_5p,ER = mcdat_I[i,1],gi = mcdat_I[i,2],gf = mcdat_I[i,3],r_i=mcdat_I[i,4],r_f=mcdat_I[i,5] )
dd <- data.frame(y)
gdat[[i]] <- dd
}
gdat[[1]]
gdat[[2]]
as.data.frame(gdat)
gg <-  as.data.frame(gdat)
gg$x <- Tgrid
gg
apply(gg, 1, sln)
gg2 <- apply(gg, 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
gg2
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],sigma = (gg2["84%",]-gg2["50%",] + gg2["50%",]-gg2["16%",] )/2)
gg2data
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lower = gg2["16%",], upper = gg2["84%",] )
gg2data
write.csv(gg2data,"NV_case_I.csv",row.names = F)
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lower = gg2["16%",], upper = gg2["84%",] )
#xtable(gg2data[,c(1,2,3,6)] , type = "latex",display= "E")
write.csv(gg2data,"NV_case_I.csv",row.names = F)
sln <- function(x){sqrt(log(1+var(x)/mean(x)^2))}
apply(gg, 1, sln)
exp( apply(gg, 1, sln))
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lower = gg2["16%",], upper = gg2["84%",] )
write.csv(gg2data,"NV_case_I.csv",row.names = F)
gg[[1]]
t(gg)[[1]]
t(gg)
t(gg)[1,]
t(gg)[,1]
hist(t(gg)[,1])
range(t(gg)[,1])
range(t(gg)[-1,1])
range(t(gg)[-5001,1])
gg
gg[,-"x"]
gg2 <- apply(gg[1:5000,], 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
sln <- function(x){sqrt(log(1+var(x)/mean(x)^2))}
apply(gg, 1, sln)
apply(gg[1:5000,], 1, sln)
gg[1:5000,]
gg2 <- apply(gg[,1:5000], 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TR
gg2 <- apply(gg[,1:5000], 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
gg2 <- apply(gg[,1:5000], 1, quantile, probs=c(0.16, 0.5, 0.84), na.rm=TRUE)
gg2
gg2data <- data.frame(x =Tgrid, mean = gg2["50%",],lower = gg2["16%",], upper = gg2["84%",] )
gg2data
sln <- function(x){sqrt(log(1+var(x)/mean(x)^2))}
apply(gg[,1:5000], 1, sln)
fu <- function(x){exp(sqrt(log(1+var(x)/mean(x)^2)))}
apply(gg[,1:5000], 1, fu)
fu_I<-apply(gg[,1:5000], 1, fu)
gg2data
gg2data$fu <- fu_I
gg2data
write.csv(gg2data,"NV_case_I.csv",row.names = F)
xtable(gg2data , type = "latex",display= "E")
require(xtable)
xtable(gg2data , type = "latex",display= "E")
xtable(gg2data , type = "latex")
xtable(gg2data , type = "latex",display= "E")
xtable(gg2data , type = "latex",auto = T)
xtable(gg2data , type = "latex",display=c(g,g,g,g,g))
xtable(gg2data , type = "latex",display=c("g","g","g","g","g"))
xtable(gg2data , type = "latex",display=c("g","g","g","g","g","g"))
xtable(gg2data , type = "latex",display=c("g","g","g","g","g","f"))
xtable(gg2data , type = "latex",display=c("g","g","g","g","g","f"),digits=4)
xtable(gg2data[,-1], type = "latex",display=c("g","g","g","g","g","f"),digits=4)
xtable(gg2data[,-1], type = "latex",display=c("g","g","g","g","f"),digits=4)
xtable(gg2data, type = "latex",display=c("g","g","g","g","g","f"),digits=4)
xtable(gg2data, type = "latex",display=c("g","g","g","g","g","f"),digits=4,caption= "Case I")
write.csv(gg2data,"NV_case_I.csv",row.names = F)
